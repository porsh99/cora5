{"version":3,"sources":["./src/app/component/profile-contact-edit/profile-contact-edit.component.ts","./src/app/component/profile-contact-edit/profile-contact-edit.component.html","./src/app/component/profile-new/profile-new.component.ts","./src/app/component/profile-new/profile-new.component.html","./src/app/model/profile/profile.ts","./src/app/service/error.service.ts","./src/app/component/verification/verification.component.ts","./src/app/component/verification/verification.component.html","./src/app/service/auth.service.ts","./src/app/component/share-data/share-data.component.ts","./src/app/component/share-data/share-data.component.html","./src/app/service/interceptor/auth.interceptor.ts","./src/environments/environment.ts","./src/app/service/guard/auth.guard.ts","./src/app/model/enum/token-type.enum.ts","./src/app/service/config.service.ts","./src/app/model/infrastructure/control-validator.ts","./src/app/service/user.service.ts","./src/app/component/agreement/agreement.component.ts","./src/app/component/agreement/agreement.component.html","./src/app/infrastructure/error/common-error-config.ts","./src/app/component/profile-address-edit/profile-address-edit.component.ts","./src/app/component/profile-address-edit/profile-address-edit.component.html","./src/app/component/profile-person-edit/profile-person-edit.component.ts","./src/app/component/profile-person-edit/profile-person-edit.component.html","./src/app/component/profile-address-new/profile-address-new.component.ts","./src/app/component/profile-address-new/profile-address-new.component.html","./src/app/component/layout/layout.component.ts","./src/app/component/layout/layout.component.html","./src/app/app.module.ts","./src/app/component/change-password/change-password.component.ts","./src/app/component/change-password/change-password.component.html","./src/app/infrastructure/error/auth-error-config.ts","./src/app/service/base.service.ts","./src/app/component/profile-contact-new/profile-contact-new.component.ts","./src/app/component/profile-contact-new/profile-contact-new.component.html","./src/app/infrastructure/error/user-error-config.ts","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/infrastructure/error/cora-error-config.ts","./src/app/component/check-in/check-in.component.ts","./src/app/component/check-in/check-in.component.html","./src/app/component/check-out/check-out.component.ts","./src/app/component/check-out/check-out.component.html","./src/app/component/profile-person-new/profile-person-new.component.ts","./src/app/component/profile-person-new/profile-person-new.component.html","./src/app/service/session.service.ts","./src/app/component/forgot-password/forgot-password.component.ts","./src/app/component/forgot-password/forgot-password.component.html","./src/app/component/profile/profile.component.ts","./src/app/component/profile/profile.component.html","./src/app/component/vaccine-list/vaccine-list.component.ts","./src/app/component/vaccine-list/vaccine-list.component.html","./src/app/app-routing.module.ts","./src/app/const/de-calendar.constant.ts","./src/app/service/guest.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { ContactModel } from '../../model/profile/contact';\r\nimport { UserService } from '../../service/user.service';\r\nimport { SessionService } from '../../service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-contact-edit',\r\n  templateUrl: './profile-contact-edit.component.html',\r\n  styleUrls: ['./profile-contact-edit.component.scss']\r\n})\r\nexport class ProfileContactEditComponent {\r\n  public modelForm: FormGroup;\r\n  public model: ContactModel;\r\n  public phoneAgain = '';\r\n  public emailAgain = '';\r\n  public passwordAgain = '';\r\n  public isPressed = false;\r\n  public showPassword = false;\r\n  public showPasswordAgain = false;\r\n\r\n  constructor(private router: Router, private sessionService: SessionService, private modelService: UserService, private messageService: MessageService) {\r\n    this.model = { ...this.sessionService.activeProfile.contact }\r\n    this.modelForm = new FormGroup(\r\n      {\r\n        phoneControl: new FormControl(this.model.cellular),\r\n        phoneAgainControl: new FormControl(this.phoneAgain),\r\n        emailControl: new FormControl(this.model.email),\r\n        emailAgainControl: new FormControl(this.emailAgain),\r\n        passwordControl: new FormControl(this.model.password),\r\n        passwordAgainControl: new FormControl(this.passwordAgain),\r\n      });\r\n  }\r\n\r\n  public saveClick() {\r\n    this.isPressed = true;\r\n    const errorList: string[] = [];\r\n    if (!this.checkControl('phoneControl', 'phoneAgainControl')) {\r\n      errorList.push('Phones must be equal');\r\n    }\r\n    if (!this.checkControl('emailControl', 'emailAgainControl')) {\r\n      errorList.push('Emails must be equal');\r\n    }\r\n    if (!this.checkControl('passwordControl', 'passwordAgainControl')) {\r\n      errorList.push('Passwords must be equal');\r\n    }\r\n    if (errorList.length > 0) {\r\n      const message: Message = { severity: 'error', summary: 'Error', detail: errorList[0] };\r\n      this.messageService.add(message);\r\n      this.isPressed = false;\r\n\r\n      return;\r\n    }\r\n\r\n\r\n    this.modelService.saveProfileContact(this.model).subscribe(\r\n      (model) => {\r\n        this.isPressed = false;       \r\n        this.sessionService.activeProfile = model\r\n        this.router.navigate(['profile']);\r\n      },\r\n      (error)=>{\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public get passwordType(){\r\n    return this.showPassword ? 'text' : 'password';\r\n  }\r\n\r\n  public get passwordAgainType(){\r\n    return this.showPasswordAgain ? 'text' : 'password';\r\n  }\r\n  \r\n  private checkControl(name1: string, name2: string): boolean {\r\n    const control1 = this.modelForm.get(name1);\r\n    const control2 = this.modelForm.get(name2);\r\n\r\n    return control1 && control2 && control1.value === control2.value ? true : false;\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container p-col-12\">\r\n  <div class=\"header\">\r\n\t\t<img src=\"assets/images/settings.png\" />\r\n\t\t<div class=\"center-container header-text\">Profil bearbeiten</div>\r\n\t</div>\r\n\r\n  <form [formGroup]=\"modelForm\">\r\n    <div class=\"center-container\">\r\n      <span class=\"p-float-label\">\r\n          <input id=\"phoneInput\" formControlName=\"phoneControl\" maxlength=\"100\"  type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"this.model.cellular\" />\r\n          <label for=\"phoneInput\">Telefonnummer</label>\r\n      </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"phoneAgainInput\" formControlName=\"phoneAgainControl\" maxlength=\"100\"  type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"phoneAgain\" />\r\n            <label for=\"phoneAgainInput\">Telefonnummer (wiederholen)</label>\r\n        </span>\r\n    </div> \r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"emailInput\" formControlName=\"emailControl\" maxlength=\"100\"  type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"this.model.email\" />\r\n            <label for=\"emailInput\">E-Mail</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"emailAgainInput\" formControlName=\"emailAgainControl\" maxlength=\"100\"  type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"emailAgain\" />\r\n            <label for=\"emailAgainInput\">E-Mail (wiederholen)</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label p-input-icon-right\">\r\n          <i *ngIf=\"!showPassword\" class=\"pi pi-eye\"  (click)=\"showPassword=!showPassword\"></i>\r\n          <i *ngIf=\"showPassword\" class=\"pi pi-eye-slash\"  (click)=\"showPassword=!showPassword\"></i>\r\n          <input id=\"password\" formControlName=\"passwordControl\" maxlength=\"100\"  [type]=\"passwordType\" class=\"small-input-container\" pInputText [(ngModel)]=\"this.model.password\" />\r\n          <label for=\"password\">Passwort</label>\r\n        </span>\r\n    </div>       \r\n    <div class=\"center-container standard-indent\">\r\n      <span class=\"p-float-label p-input-icon-right\">\r\n        <i *ngIf=\"!showPasswordAgain\" class=\"pi pi-eye\"  (click)=\"showPasswordAgain=!showPasswordAgain\"></i>\r\n        <i *ngIf=\"showPasswordAgain\" class=\"pi pi-eye-slash\"  (click)=\"showPasswordAgain=!showPasswordAgain\"></i>\r\n        <input id=\"passwordAgain\" formControlName=\"passwordAgainControl\" maxlength=\"100\"  [type]=\"passwordAgainType\" class=\"small-input-container\" pInputText [(ngModel)]=\"passwordAgain\" />\r\n        <label for=\"passwordAgain\">Passwort (wiederholen)</label>\r\n      </span>\r\n    </div> \r\n    <div class=\"center-container\" style=\"margin-top:15px\">\r\n      <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"saveClick()\">Speichern</button>\r\n    </div>\r\n    <div class=\"center-container\" style=\"margin-top:10px\">\r\n      <button class=\"white-button\" [class.button-disabled]=\"isPressed\" routerLink=\"/profile\">Abbrechen</button>\r\n    </div> \r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Message, MessageService } from 'primeng/api';\nimport { PersonModel } from 'src/app/model/profile/person';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { SessionService } from 'src/app/service/session.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-profile-new',\n  templateUrl: './profile-new.component.html',\n  styleUrls: ['./profile-new.component.scss']\n})\nexport class ProfileNewComponent {\n  public stageNumber: number\n\n  constructor(private router: Router,\n    private modelService: UserService,\n    private authService: AuthService,\n    private messageService: MessageService,\n    private sessionService: SessionService) {\n      this.stageNumber = 1;\n  }\n\n  public nextClick() {\n  }\n\n  public cancelClick() {\n    this.router.navigate(['login']);\n  }\n\n  public changeStage($event: number){\n    this.stageNumber = $event;\n  }\n}\n","<div class=\"p-fluid main-container\">\n    <div class=\"header\">\n        <img src=\"assets/images/register.png\" />\n        <div class=\"center-container header-text\">Registrierung ({{stageNumber}}/3)</div>\n    </div>\n    <app-profile-person-new *ngIf=\"stageNumber===1\" (changeStage)=\"changeStage($event)\"></app-profile-person-new>\n    <app-profile-address-new *ngIf=\"stageNumber===2\" (changeStage)=\"changeStage($event)\"></app-profile-address-new>\n    <app-profile-contact-new *ngIf=\"stageNumber===3\"></app-profile-contact-new>\n</div>","import { AddressModel } from './address';\r\nimport { ContactModel } from './contact';\r\nimport { PersonModel } from './person';\r\n\r\nexport interface ProfileModel {\r\n    person: PersonModel;\r\n    address: AddressModel;\r\n    contact: ContactModel;\r\n    acceptAgreement: boolean;\r\n    acceptDataShare: boolean;\r\n}\r\n\r\nexport const newProfile: ProfileModel = {\r\n  address: {},\r\n  person: {},\r\n  contact: {},\r\n  acceptAgreement: false,\r\n  acceptDataShare: false\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { coraErrorConfig } from '../infrastructure/error/cora-error-config';\r\nimport { AppErrorConfig } from '../model/infrastructure/app-error-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n  private appErrorConfig: AppErrorConfig = coraErrorConfig;\r\n\r\n  constructor() { }\r\n\r\n  public getServiceError(service: string, errorCode: string) {\r\n    let error = this.getError(service, errorCode);\r\n    if (!error)\r\n    {\r\n      error = this.getError('common', errorCode);\r\n    }\r\n\r\n    return (error) ? error : errorCode;\r\n  }\r\n\r\n  public get invalidTokenKey(): string{\r\n    return 'tokenNotFound';\r\n  }\r\n\r\n  public get invalidTokenError(): string{\r\n    return this.getError('common', 'tokenNotFound')??'';\r\n  }\r\n\r\n  private getError(service: string, errorCode: string): string|undefined {\r\n    const apiErrors = this.appErrorConfig.errors.find(item => item[service])?.[service];\r\n    if (!apiErrors){\r\n      return undefined;\r\n    }\r\n\r\n    return apiErrors.find(item => item[errorCode])?.[errorCode];\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { GeneratePinRequest } from '../../model/security/generate-pin-request';\r\nimport { LoginPinRequest } from '../../model/security/login-pin-request';\r\nimport { PinModel } from '../../model/security/pin';\r\nimport { AuthService } from '../../service/auth.service';\r\nimport { SessionService } from '../../service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-verification',\r\n  templateUrl: './verification.component.html',\r\n  styleUrls: ['./verification.component.scss']\r\n})\r\nexport class VerificationComponent implements OnInit {\r\n\r\n  public modelForm: FormGroup;\r\n  public model: PinModel;\r\n  public isPressed = true;\r\n\r\n  constructor(private router: Router, private sessionService: SessionService, private authService: AuthService, private modelService: UserService, private messageService: MessageService) {\r\n    this.model = {};\r\n    this.modelForm = new FormGroup({\r\n      value1Control: new FormControl(this.model.value1, Validators.required),\r\n      value2Control: new FormControl(this.model.value2, Validators.required),\r\n      value3Control: new FormControl(this.model.value3, Validators.required),\r\n      value4Control: new FormControl(this.model.value4, Validators.required),\r\n      resendButton: new FormControl('')\r\n    });\r\n\r\n  }\r\n    ngOnInit(): void {\r\n      this.generatePinCode();\r\n    }\r\n\r\n  public confirmClick() {\r\n    this.isPressed = true;\r\n    const request: LoginPinRequest = {\r\n      cellular: this.sessionService.activeProfile?.contact?.cellular ?? '',\r\n      email: this.sessionService.activeProfile?.contact?.email ?? '',\r\n      pinCode: `${this.model.value1}${this.model.value2}${this.model.value3}${this.model.value4}`\r\n    }\r\n    this.modelService.activateProfile(request).subscribe(\r\n      (model) => {\r\n        this.isPressed = false;\r\n        this.authService.accessToken = model.token;\r\n        this.sessionService.session.lotNumber = model.lotNumber;\r\n        this.sessionService.session.isVeryfied = true;\r\n        this.router.navigate(['check-in']);\r\n      },\r\n      (error) => {\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public resendClick() {\r\n    this.generatePinCode();\r\n  }\r\n\r\n  private generatePinCode() {\r\n    this.isPressed = true;\r\n    const request: GeneratePinRequest = {\r\n      cellular: this.sessionService.activeProfile?.contact?.cellular ?? '',\r\n      email: this.sessionService.activeProfile?.contact?.email ?? '',\r\n    }\r\n    this.authService.generatePin(request).subscribe(\r\n      ()=> { \r\n        const message: Message = {\r\n          severity: 'info', summary: 'Servicemeldung', detail: 'Überprüfen Sie Ihren Emal auf Bestätigungscode'};\r\n        this.messageService.add(message);\r\n        this.isPressed = false; \r\n      },\r\n      (error)=> {\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  public changeInput(id: string){\r\n    document.getElementById(id)?.focus();\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container p-col-12\">\r\n  <p-progressSpinner *ngIf=\"isPressed\" styleClass=\"custom-spinner\"></p-progressSpinner>\r\n\r\n  <div class=\"header\">\r\n    <img src=\"assets/images/verify.png\" />\r\n    <div class=\"center-container header-text\">Verifizierung</div>\r\n  </div>\r\n\r\n  <div class=\"center-container regular-text description\">\r\n    Bitte geben Sie den Bestätigungscode ein, den Sie per SMS erhalten haben\r\n  </div>\r\n\r\n  <form [formGroup]=\"modelForm\">\r\n    <div class=\"center-container p-d-flex p-jc-between\">\r\n      <div>\r\n        <input id=\"input1\" (input)=\"changeInput('input2')\" type=\"text\" formControlName=\"value1Control\" [(ngModel)]=\"model.value1\" maxlength=\"1\" />\r\n      </div>\r\n      <div>\r\n        <input id=\"input2\" (input)=\"changeInput('input3')\" type=\"text\" formControlName=\"value2Control\" [(ngModel)]=\"model.value2\" maxlength=\"1\"/>\r\n      </div>\r\n      <div>\r\n        <input id=\"input3\" (input)=\"changeInput('input4')\" type=\"text\" formControlName=\"value3Control\" [(ngModel)]=\"model.value3\" maxlength=\"1\" />\r\n      </div>\r\n      <div>\r\n        <input id=\"input4\" type=\"text\" formControlName=\"value4Control\" [(ngModel)]=\"model.value4\" maxlength=\"1\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"p-field center-container regular-text\" style=\"margin-top:35px\">\r\n      Wenn Sie keinen Code haben\r\n    </div>\r\n    <button class=\"resend-button\" style=\"font-size: 15px !important\" [class.button-disabled]=\"isPressed\" (click)=\"resendClick()\">Code erneut senden</button>\r\n    <div class=\"p-field center-container\" style=\"margin-top:35px\">\r\n      <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"confirmClick()\">Bestätigen</button>\r\n    </div>\r\n    <div class=\"p-field center-container\" style=\"margin-top:20px\">\r\n      <button class=\"white-button\" [class.button-disabled]=\"isPressed\" routerLink=\"/login\">Abbrechen</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { flatMap, tap } from 'rxjs/operators';\r\nimport { AppConfig } from '../model/app-config';\r\nimport { AuthTokenType } from '../model/enum/token-type.enum';\r\nimport { ForgotPasswordRequest } from '../model/security/forgot-password-request';\r\nimport { GeneratePinRequest } from '../model/security/generate-pin-request';\r\nimport { LoginRequestModel } from '../model/security/login-request';\r\nimport { LoginResponseModel } from '../model/security/login-response';\r\nimport { ConfigService } from './config.service';\r\nimport { LoginPinRequest } from '../model/security/login-pin-request';\r\nimport { GeneratePinResponse } from '../model/security/generate-pin-response';\r\nimport { BaseService } from './base.service';\r\nimport { ChangePasswordRequest } from '../model/security/change-password-request';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService extends BaseService {\r\n\r\n  public restoreToken(): Observable<LoginResponseModel> {\r\n    return this.callPost<unknown,LoginResponseModel>({}, 'refresh')\r\n               .pipe(tap(response => {\r\n                      this.setAccessToken(response.token);\r\n                      this.setRefreshToken(response.token);\r\n                    }));\r\n  }\r\n\r\n  public login(request: LoginRequestModel): Observable<LoginResponseModel> {\r\n    return this.callPost<LoginRequestModel, LoginResponseModel>(request, 'login')\r\n               .pipe(tap(response => this.invokeLogin(request.isRemember, response)));\r\n  }\r\n\r\n  public logoff() {\r\n    return this.callPost({}, 'logoff')\r\n                .pipe(tap(() => {\r\n                  this.removeToken(AuthTokenType.access);\r\n                  this.removeToken(AuthTokenType.refresh);\r\n                }));\r\n  }\r\n\r\n  public generatePin(request: GeneratePinRequest) {\r\n    return this.callPost<GeneratePinRequest, unknown>(request, 'pin/gen');\r\n  }\r\n\r\n  public forgotPassword(request: ForgotPasswordRequest) {\r\n    return this.callPost<ForgotPasswordRequest, unknown>(request, 'forgot/password');\r\n  }\r\n\r\n  public changePassword(request: ChangePasswordRequest) {\r\n    return this.callPut<ChangePasswordRequest, unknown>(request, 'change/password');\r\n  }\r\n\r\n  public get accessToken(): string | null{\r\n    return this.getToken(AuthTokenType.access);\r\n  }\r\n\r\n  public set accessToken(token: string | null) {\r\n    this.setAccessToken(token);\r\n  }\r\n\r\n  public get refreshToken(): string | null {\r\n    return this.getToken(AuthTokenType.refresh);\r\n  }\r\n\r\n  public get passwordToken(): string | null {\r\n    return localStorage.getItem('PCT');\r\n  }\r\n\r\n  public set passwordToken(token: string | null) {\r\n    if (token)\r\n    {\r\n      localStorage.setItem('PCT', token);  \r\n    }\r\n    else{\r\n      localStorage.removeItem('PCT');\r\n    }\r\n  }\r\n\r\n  protected get controller(): string {\r\n    return 'api/auth';\r\n  }\r\n\r\n  private invokeLogin(isRemember: boolean, response: LoginResponseModel) {\r\n    this.setAccessToken(response.token);\r\n    if (isRemember) {\r\n      this.setRefreshToken(response.token);\r\n    }\r\n  }\r\n\r\n  private invokeRefresh(config: AppConfig | null): Observable<LoginResponseModel> {\r\n    const path = `${config?.apiUrl}/api/auth/refresh`;\r\n\r\n    return this.client.post<LoginResponseModel>(path, {token: this.refreshToken})\r\n      .pipe(tap(model => {\r\n        this.setAccessToken(model.token);\r\n        this.setRefreshToken(model.token);\r\n      }));\r\n  }\r\n\r\n  private setAccessToken(token: string|null) {\r\n    this.setToken(token, AuthTokenType.access);\r\n  }\r\n\r\n  private setRefreshToken(token: string) {\r\n    this.setToken(token, AuthTokenType.refresh);\r\n  }\r\n\r\n  private setToken(token: string|null, type: AuthTokenType) {\r\n    const storage = type === AuthTokenType.access ? sessionStorage : localStorage;\r\n    if (token){\r\n      storage.setItem('token', token);\r\n    }\r\n    else{\r\n      storage.removeItem('token');\r\n    }\r\n  }\r\n\r\n  private getToken(type: AuthTokenType): string | null {\r\n    const storage = type === AuthTokenType.access ? sessionStorage : localStorage;\r\n\r\n    return storage.getItem('token');\r\n  }\r\n\r\n  private removeToken(type: AuthTokenType) {\r\n    const storage = type === AuthTokenType.access ? sessionStorage : localStorage;\r\n\r\n    return storage.removeItem('token');\r\n\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from 'src/app/service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-share-data',\r\n  templateUrl: './share-data.component.html',\r\n  styleUrls: ['./share-data.component.scss']\r\n})\r\nexport class ShareDataComponent {\r\n\r\n  constructor(private sessionService: SessionService, private router: Router) { \r\n    this.sessionService.isDataShareChecked = false;\r\n  }\r\n\r\n  public confirmClick(){\r\n    this.sessionService.isDataShareChecked = true;\r\n    this.router.navigate(['profile/new']);\r\n  }\r\n\r\n  public cancelClick(){\r\n    this.sessionService.isDataShareChecked = false;\r\n    this.router.navigate(['profile/new']);\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n\t<div class=\"scan-header-container\">\r\n\t\t<div class=\"attension-text\">\r\n\t\t\tDatenschutzerklärung\r\n\t\t</div>\r\n\t\t<div class=\"regular-text\">\r\n\t\t\tCORA\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"wrapper__container share-data-container\">\r\n\t\t<div class=\"wrapper__container--body share-data-container-body\">\r\n\t\t\t<div class=\"container container__flex-container\">\r\n\t\t\t\t<div class=\"agreement\">\r\n\t\t\t\t\t<p>Datenschutzerklärung (Stand 12.01.2021)</p>\r\n\t\t\t\t\t<p>I. Geltungsbereich<br />\r\n\t\t\t\t\t\tIm Folgenden finden Sie die aktuelle Fassung unserer Datenschutzerklärung, die im Zusammenhang mit der\r\n\t\t\t\t\t\tNutzung der CORA App und dazugehöriger Dienste, im Folgenden zusammengefasst als „Dienste“\r\n\t\t\t\t\t\tbezeichnet, stehen.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>II.Verantwortlicher\r\n\t\t\t\t\t\tFür die Verarbeitung personenbezogener Daten, im Folgenden mit „wir“ oder „uns“ bezeichnet, ist\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tMATECODE GmbH<br />\r\n\t\t\t\t\t\tMarienstraße 5<br />\r\n\t\t\t\t\t\t70178 Stuttgart<br />\r\n\t\t\t\t\t\t<a href=\"mailto:info@matecode.de\">info@matecode.de</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>Sofern Sie Fragen zu dieser Datenschutzerklärung haben, erreichen Sie uns unter den oben genannten\r\n\t\t\t\t\t\tKontaktdaten.</p>\r\n\t\t\t\t\t<p>III. Datenerhebung, -Speicherung und -Speicheungsdauer<br />\r\n\t\t\t\t\t\t1.Wir erheben personenbezogene Daten und speichern diese unter Wahrung des anwendbaren <br />\r\n\t\t\t\t\t\tDatenschutzrechts.</p>\r\n\t\t\t\t\t<p>2. Personenbezogene Daten sind gemäß Art. 4, Nr. 1 Datenschutz-Grundverordnung alle Informationen, die\r\n\t\t\t\t\t\tsich auf eine identifizierte oder identifizierbare natürliche Person beziehen.</p>\r\n\t\t\t\t\t<p>3.Die Datenerhebung erfolgt, sofern Sie unsere Dienste in Anspruch nehmen, Informationen an uns\r\n\t\t\t\t\t\tübermitteln oder Dritte uns Ihre personenbezogenen Daten unter Wahrung des Datenschutzrechts zur\r\n\t\t\t\t\t\tVerfügung stellen.</p>\r\n\t\t\t\t\t<p>4.Daten die erhoben werden sind insbesondere</p>\r\n\t\t\t\t\t<p>a. Kontaktdaten wie Name, Vorname, Geburtsdatum, Anschrift, Telefonnummer und eMail-Adresse</p>\r\n\t\t\t\t\t<p>b. Erweiterte Angaben, die Sie durch unsere Dienste übermitteln</p>\r\n\t\t\t\t\t<p>c. Aufenthaltsdaten, die Sie uns durch unsere Dienste übermitteln</p>\r\n\t\t\t\t\t<p>d. Zweckmäßige Daten, die für die Funktionalität notwenig sind, Zuordnungsschlüssel und\r\n\t\t\t\t\t\tQR Codes</p>\r\n\t\t\t\t\t<p>5.Die Dauer der Datenspeicherung richtet nach dem Zweck zu dem sie erhoben wurden oder solange wir ein\r\n\t\t\t\t\t\tberechtigtes Interesse daran haben (ggf. bis zum Ablauf der Verjährungsfrist zur Durchsetzung eigener\r\n\t\t\t\t\t\tAnsprüche). Darüber hinaus speichern wir Ihre personenbezogenen Daten für eine gesetzlich, gerichtlich\r\n\t\t\t\t\t\toder behördlich vorgeschriebene Dauer.</p>\r\n\t\t\t\t\t<p>IV. Zweck der Datenspeicherung und Gesetzesgrundlage</p>\r\n\t\t\t\t\t<p>Wir verarbeiten Ihre personenbezogenen Daten nur soweit dies nach geltendem Recht erlaubt ist,\r\n\t\t\t\t\t\tinsbesondere nach den Regelungen des Infektionsschutzgesetzes (IfSG), genauer gemäß\r\n\t\t\t\t\t\t§ 28a Abs.1, Ziff.17 IfSG der Anordnung der Verarbeitung der Kontaktdaten.\r\n\t\t\t\t\t\tDarüber hinaus beruht die Datenspeicherung zum Zweck der Erfüllung und auf Grundlage der\r\n\t\t\t\t\t\tDatenschutzgrundverordnung (DSGVO) gemäß:</p>\r\n\t\t\t\t\t<p>1. Art.6 Abs.1, 1a DSGVO Sie erteilen Ihre Einwilligung zum Zweck der Weitergabe von Daten an\r\n\t\t\t\t\t\tGesundheitsbehörden</p>\r\n\t\t\t\t\t<p>2. Art.6 Abs.1,1b DSGVO zur Erfüllung vertraglicher oder ggf. vorvertraglicher Pflichten aus Verträgen,\r\n\t\t\t\t\t\tdessen Vertragspartei Sie sind und auf Ihre Anfrage hin erfolgen. Dies umfasst auch Verträge über die\r\n\t\t\t\t\t\tInanspruchnahme unserer Dienste</p>\r\n\t\t\t\t\t<p>3. Art.6 Abs.1, 1c DSGVO zur Einhaltung gesetzlicher Pflichten oder gerichtlichen oder behördlichen\r\n\t\t\t\t\t\tVorgaben</p>\r\n\t\t\t\t\t<p>4. Art.6 Abs.1, 1a,1b,1f DSGVO zur Möglichkeit der Kontaktaufnahme für jegliche Zwecke und zur\r\n\t\t\t\t\t\tBeantwortung von Anliegen und Rückmeldungen</p>\r\n\t\t\t\t\t<p>5. Art.6 Abs.1, 1b, 1f DSGVO zur Gewährleistung der ordnungsgemäßen Bereitstellung und Nutzbarkeit\r\n\t\t\t\t\t\tunserer Dienste</p>\r\n\t\t\t\t\t<p>6. Art.6 Abs.1, 1b, 1c DSGVO zur Gewährleistung der allgemeinen Systemsicherheit, Systemgesundheit und\r\n\t\t\t\t\t\tSystemstabilität unserer Dienste, sowie deren fehler- und störungsfreie Bereitstellung.</p>\r\n\t\t\t\t\t<p>V. Datenweitergabe an Dritte<br />\r\n\t\t\t\t\t\tWir nehmen den Schutz Ihrer persönlichen Daten sehr ernst, behandeln sie vertraulich und entsprechend der\r\n\t\t\t\t\t\tDatenschutzvorschriften, sowie dieser Datenschutzerklärung.<br />\r\n\t\t\t\t\t\tZum Zwecke der Erleichterung der Verarbeitung Ihrer personenbezogenen Daten, können wir diese im\r\n\t\t\t\t\t\tZusammenhang mit Dienstleistungen die Dritte für uns oder zusammen mit uns erbringen, unter der\r\n\t\t\t\t\t\tMaßgabe, dass diese Dritten Ihre personenbezogenen Daten in keiner anderen Weise als zur Erbringung von\r\n\t\t\t\t\t\tDienstleistungen für uns verwenden dürfen. Insbesondere können dies Anbieter von\r\n\t\t\t\t\t\tDatenverarbeitungsanlagen, Infrastruktur- Anbieter, Datenplattform- Anbieter und Datenspeicher-Anbieter\r\n\t\t\t\t\t\tsein.<br />\r\n\t\t\t\t\t\tDarüber hinaus können wir Ihre personenbezogenen Daten an Dritte weitergeben, wenn dies gesetzlich\r\n\t\t\t\t\t\tvorgeschrieben ist oder die Übermittelung behördlich angefragt wird.</p>\r\n\t\t\t\t\t<p>VI. Rechte der betroffenen Person<br />\r\n\t\t\t\t\t\tDie DSGVO sieht bezüglich der Verarbeitung Ihrer personenbezogenen Daten folgende Rechte vor.</p>\r\n\t\t\t\t\t<p>1. Nach Art. 15 DSGVO haben Sie das Recht umfassend Auskunft über die gespeicherten,\r\n\t\t\t\t\t\tpersonenbezogenen Daten und und deren Verarbeitungszweck einzuholen. Bitte beachten Sie dabei, dass\r\n\t\t\t\t\t\tRechte und Freiheiten anderer Personen Ihr Recht auf Auskunft einschränken können.</p>\r\n\t\t\t\t\t<p>2. Nach Art. 16 DSGVO haben Sie das Recht auf Berichtigung Ihrer personenbezogenen Daten.</p>\r\n\t\t\t\t\t<p>3. Nach Art. 17 DSGVO haben Sie unter bestimmten Voraussetzungen das Recht auf Datenlöschung („Recht\r\n\t\t\t\t\t\tauf Vergessenwerden“).</p>\r\n\t\t\t\t\t<p>4. Nach Art. 18 DSGVO haben Sie unter bestimmten Voraussetzungen das Recht auf Einschränkung der\r\n\t\t\t\t\t\tVerarbeitung Ihrer personenbezogen Daten.</p>\r\n\t\t\t\t\t<p>5. Nach Art. 20 DSGVO haben Sie unter bestimmten Voraussetzungen das Recht auf Datenübertragbarkeit.</p>\r\n\t\t\t\t\t<p>6. Nach Art. 21 DSGVO haben Sie in bestimmten Situationen das Recht der Verarbeitung Ihrer\r\n\t\t\t\t\t\tpersonenbezogener Daten zu widersprechen, sofern die Verarbeitung gemäß Art. 6 Abs.1, 1e DSGVO für die\r\n\t\t\t\t\t\tWahrnehmung einer Aufgabe, die im öffentlichen Interesse liegt erforderlich ist bzw. in Ausübung\r\n\t\t\t\t\t\töffentlicher Gewalt erfolgt, auf einem berechtigten Interesse von uns oder eines Dritten gemäß\r\n\t\t\t\t\t\tArt. 6 Abs.1, 1f DSGVO beruht oder Ihre personenbezogenen Daten für Zwecke der Direktwerbung\r\n\t\t\t\t\t\tverarbeitet werden.</p>\r\n\t\t\t\t\t<p>7. Ungeachtet der vorstehenden Rechte haben Sie das Recht, Beschwerde bei einer Aufsichtsbehörde\r\n\t\t\t\t\t\teinzulegen.</p>\r\n\t\t\t\t\t<p>VII. Widerrufsrecht zur Einwilligung der Datenverarbeitung<br />\r\n\t\t\t\t\t\tSie können eine bereits erteilte Einwilligung zur Verarbeitung Ihrer personenbezogener Daten jederzeit\r\n\t\t\t\t\t\twiderrufen. Die Rechtmäßigkeit der bis zum Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf\r\n\t\t\t\t\t\tunberührt.</p>\r\n\t\t\t\t\t<p>VIII. Aktualisierung der Datenschutzerklärung<br />\r\n\t\t\t\t\t\tWir behalten uns vor diese Datenschutzerklärung anzupassen, insbesondere im Falle der Änderung der\r\n\t\t\t\t\t\tRechtslage oder unserer Dienste.<br />\r\n\t\t\t\t\t\tEtwaige Änderungen werden Ihnen, sofern erforderlich, mitgeteilt. Bitte Informieren Sie sich in\r\n\t\t\t\t\t\tregelmäßigen Abständen über den aktuellen Stand der Datenschutzerklärung.</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"p-field center-container\" style=\"margin-top: 50px\">\r\n\t\t\t\t<button class=\"orange-button\" style=\"margin-bottom: 10px;\" (click)=\"confirmClick()\">Zustimmen</button>\r\n\t\t\t\t<button class=\"white-button\" (click)=\"cancelClick()\">Abbrechen</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const accessToken = this.authService.accessToken;\r\n    if (accessToken) {\r\n      request = this.addAuthenticationHearder(request, accessToken);\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n\r\n  private addAuthenticationHearder(request: HttpRequest<any>, token: string): HttpRequest<any> {\r\n    return request.clone({\r\n      setHeaders: {\r\n        Authorization: token\r\n      }\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate  {\r\n\r\n  constructor(private authService: AuthService) {\r\n  }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n      return (this.authService.accessToken !== '');\r\n    }\r\n}\r\n","export enum AuthTokenType {\r\n  access,\r\n  refresh\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppConfig } from '../model/app-config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n  private readonly configUrl = 'assets/config.json'\r\n  constructor(private client: HttpClient) { }\r\n\r\n  public get config(): Observable<AppConfig | null> {\r\n    const storageConfigStr = sessionStorage.getItem('app-config-cache') ;\r\n    const task = storageConfigStr === null || storageConfigStr === undefined\r\n                 ? this.client.get<AppConfig>(this.configUrl)\r\n                              .pipe(map(data => {\r\n                                sessionStorage.setItem('app-config-cache', JSON.stringify(data));\r\n                                return data;\r\n                              }))\r\n                 : of(JSON.parse(storageConfigStr));\r\n\r\n    return task;\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport interface ControlValidator {\r\n  validate(control: AbstractControl | null, message: string): string | null;\r\n}\r\n\r\nexport class ValidatorBase {\r\n  static requiredValidator(message: string): ControlValidator {\r\n    return {\r\n      validate: (control: AbstractControl | null): string | null => {\r\n        if (control !== null) {\r\n          let isValid: boolean;\r\n          if (typeof control.value === 'string') {\r\n            isValid = (control.value as string).trim().length > 0;\r\n          } else {\r\n            isValid = control.value !== undefined && control.value !== null;\r\n          }\r\n          return isValid ? null : message\r\n        }\r\n\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivateProfileRequest } from '../model/profile/activate-profile-request';\r\nimport { AddressModel } from '../model/profile/address';\r\nimport { ContactModel } from '../model/profile/contact';\r\nimport { PersonModel } from '../model/profile/person';\r\nimport { ProfileModel } from '../model/profile/profile';\r\nimport { LoginResponseModel } from '../model/security/login-response';\r\nimport { TokenModel } from '../model/security/token';\r\nimport { VaccinneDetailsModel } from '../model/user/vaccinne-details';\r\nimport { VaccinneListModel } from '../model/user/vaccinne-list';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService extends BaseService {\r\n\r\n  public getProfile(): Observable<ProfileModel> {\r\n    return this.callGet('profile');\r\n  }\r\n\r\n  public getVaccineListModel(){\r\n    return this.callGet<VaccinneListModel>('vaccination/card');\r\n  }\r\n\r\n  public getVaccineDetailsModel(guid: string){\r\n    const path = `vaccination/${guid}`;\r\n    return this.callGet<VaccinneDetailsModel>(path);\r\n  }\r\n\r\n  public registerProfile(model: PersonModel) {\r\n    return this.callPost<PersonModel,TokenModel>(model, 'profile/register');\r\n  }\r\n\r\n  public activateProfile(model: ActivateProfileRequest) {\r\n    return this.callPost<ActivateProfileRequest,LoginResponseModel>(model, 'profile/activate');\r\n  }\r\n\r\n  public saveProfilePerson(model: PersonModel) {\r\n    return this.callPut<PersonModel, ProfileModel>(model, 'profile/save/person');\r\n  }\r\n\r\n  public saveProfileAddress(model: AddressModel){\r\n    return this.callPut<AddressModel, ProfileModel>(model, 'profile/save/address');\r\n  }\r\n\r\n  public saveProfileContact(model: ContactModel){\r\n    return this.callPut<ContactModel, ProfileModel>(model, 'profile/save/contact');\r\n  }\r\n\r\n  public canselRegistration(){\r\n    return this.callDelete('profile/register/cancel');\r\n  }\r\n\r\n  protected get controller(): string {\r\n    return 'api/user'\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from 'src/app/service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-agreement',\r\n  templateUrl: './agreement.component.html',\r\n  styleUrls: ['./agreement.component.scss']\r\n})\r\nexport class AgreementComponent {\r\n\r\n  constructor(private sessionService: SessionService, private router: Router) { \r\n    this.sessionService.isAgreementChecked = false;\r\n  }\r\n\r\n  public confirmClick(){\r\n    this.sessionService.isAgreementChecked = true;\r\n    this.router.navigate(['profile/new']);\r\n  }\r\n\r\n  public cancelClick(){\r\n    this.sessionService.isAgreementChecked = false;\r\n    this.router.navigate(['profile/new']);\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n\t<div class=\"scan-header-container\">\r\n\t\t<div class=\"attension-text\">\r\n\t\t\tNutzungsbedingungen\r\n\t\t</div>\r\n\t\t<div class=\"regular-text\">\r\n\t\t\tCORA\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"wrapper__container agreement-container\">\r\n\t\t<div class=\"wrapper__container--body agreement-container-body\">\r\n\t\t\t<div class=\"container container__flex-container\">\r\n\t\t\t\t<div class=\"agreement\">\r\n\t\t\t\t\t<p>Nutzungsbedingungen</p>\r\n\t\t\t\t\t<p>I. Allgemeines /Geltungsbereich<br />\r\n\t\t\t\t\t\t1. Diese CORA Nutzungsbedingungen (im Folgenden „<strong>Nutzungsbedingungen</strong>“ genannt) gelten für\r\n\t\t\t\t\t\talle Verträge (im\r\n\t\t\t\t\t\tFolgenden „<strong>Nutzungsverträge</strong>“genannt) zwischen der MATECODE GmbH, Marienstraße 5, 70178\r\n\t\t\t\t\t\tStuttgart (im\r\n\t\t\t\t\t\tFolgenden „CORA“ genannt) und Kunden von CORA (im Folgenden „<strong>Nutzer</strong>“ genannt) über die\r\n\t\t\t\t\t\tNutzung der\r\n\t\t\t\t\t\tnachstehend definierten Dienste. Diese Nutzungsbedingungen werden Bestandteil jedes Nutzungsvertrages.<br />\r\n\t\t\t\t\t\t2. Zur besseren Lesbarkeit von Personenbezeichnungen und personenbezogenen Wörtern wird in diesen\r\n\t\t\t\t\t\tNutzungsbedingungen die männliche Form verwendet. Entsprechende Begriffe gelten im Sinne der\r\n\t\t\t\t\t\tGleichbehandlung\r\n\t\t\t\t\t\tgrundsätzlich für alle Geschlechter und enthalten keine Wertung.<br />\r\n\t\t\t\t\t\t3. Diese Nutzungsbedingungen gelten auch für künftige Verträge zwischen CORA und dem Nutzer. Einen\r\n\t\t\t\t\t\tgesonderten,\r\n\t\t\t\t\t\tentsprechenden Hinweis bedarf es im Einzelfall nicht. Diese Nutzungsbedingungen gelten spätestens dann als\r\n\t\t\t\t\t\tvon dem\r\n\t\t\t\t\t\tNutzer bestätigt, wenn der Nutzer die Dienste in Anspruch nimmt.<br />\r\n\t\t\t\t\t\t4. Diese Nutzungsbedingungen gelten unter Ausschluss weiterer Bedingungen. Abweichende, widersprechende oder\r\n\t\t\t\t\t\tergänzende allgemeine Geschäftsbedingungen können ausschließlich mit schriftlicher Zustimmung durch CORA\r\n\t\t\t\t\t\tBestandteil eines Nutzungsvertrags werden.<br />\r\n\t\t\t\t\t\t5. Sofern diese Nutzungsbedingungen die Begriffe „schriftlich“, „in Schriftform“ oder ähnliche Begriffe\r\n\t\t\t\t\t\tverwenden,\r\n\t\t\t\t\t\tbeziehen sich diese auf die Schriftform im Sinne des § 126 BGB. Der elektronische Austausch von Kopien,\r\n\t\t\t\t\t\thandschriftlich unterzeichneter Dokumente, sowie von Dokumenten mit elektronischer Signatur ist insoweit\r\n\t\t\t\t\t\tausreichend.<br />\r\n\t\t\t\t\t\tSoweit diese Nutzungsbedingungen nicht ausdrücklich etwas anderes bestimmen, ist der Austausch einfacher\r\n\t\t\t\t\t\tE-Mails\r\n\t\t\t\t\t\tnicht ausreichend.<br />\r\n\t\t\t\t\t\t6. Mitteilungen und Erklärungen, die der Nutzer gegenüber CORA abgibt, sind mindestens in Textform im Sinne\r\n\t\t\t\t\t\tdes §\r\n\t\t\t\t\t\t126 BGB abzugeben. Eine Einfache eMail ist ausreichend, solange diese Nutzungsbedingungen nicht ausdrücklich\r\n\t\t\t\t\t\tetwas anderes bestimmen.<br />\r\n\t\t\t\t\t\t7. Verweise dieser Nutzungsbedingungen auf die Anwendbarkeit gesetzlicher Vorschriften dienen lediglich der\r\n\t\t\t\t\t\tAufklärung. Gesetzliche Vorschriften gelten auch ohne Aufklärung, es sei denn sie werden durch diese\r\n\t\t\t\t\t\tNutzungsbedingungen ergänzt oder ausgeschlossen.</p>\r\n\t\t\t\t\t<p>II. Dienste/ Zustandekommen von Nutzungsverträgen<br />\r\n\t\t\t\t\t\t1. Nach Maßgabe des jeweiligen Nutzungsvertrages gewährt CORA dem privaten Nutzer kostenfrei Zugang zu der\r\n\t\t\t\t\t\tvon\r\n\t\t\t\t\t\tCORA als Software Service angebotenen Software zur Kontaktdatenübermittlung, einschließlich aller\r\n\t\t\t\t\t\tdazugehörigen\r\n\t\t\t\t\t\tWebsites, Plattformen, Dienste, Anwendungen und Funktionen („<strong>Dienste</strong>“).<br />\r\n\t\t\t\t\t\t2. Um die Dienste nutzen zu können, muss der Nutzer innerhalb der Dienste bestimmte persönliche Daten\r\n\t\t\t\t\t\thinterlegen\r\n\t\t\t\t\t\tund diese Nutzungsbedingungen akzeptieren. Der Nutzer kann seine persönlichen Daten überprüfen und ggf.\r\n\t\t\t\t\t\tberichtigen. Nachdem der Nutzer die vollständig ausgefüllte Anmeldung abgeschickt hat, erhält der Nutzer von\r\n\t\t\t\t\t\tCORA\r\n\t\t\t\t\t\tin der Regel eine Bestätigung seiner Anmeldung. Durch diese Bestätigung kommt zwischen CORA und dem Nutzer\r\n\t\t\t\t\t\tein\r\n\t\t\t\t\t\tverbindlicher Nutzungsvertrag zustande.<br />\r\n\t\t\t\t\t\t3. CORA hat das Recht, die Dienste jederzeit und ohne Vorankündigung herabzustufen, einzuschränken oder\r\n\t\t\t\t\t\tanderweitig zu modifizieren. Vorbehaltlich der Regelungen in Ziffer VIII treffen CORA für die Dienste keine\r\n\t\t\t\t\t\tGarantie-, Entschädigungs-, Wartungs-, Support- oder Verfügbarkeitsverpflichtungen.<br />\r\n\t\t\t\t\t\t4. CORA ist berechtigt, zur Erfüllung seiner vertraglichen Pflichten jederzeit Unterauftragnehmer zu\r\n\t\t\t\t\t\tbeauftragen.<br />\r\n\t\t\t\t\t\t5. CORA wird den Vertragstext (diese Nutzungsbedingungen und der jeweilige Nutzungsvertrag) nach\r\n\t\t\t\t\t\tZustandekommen eines Nutzungsvertrages nicht speichern. Der Vertragstext ist dann für den Nutzer nicht mehr\r\n\t\t\t\t\t\tzugänglich.</p>\r\n\t\t\t\t\t<p>III. Nutzungsrechte und Nutzungsbeschränkungen<br />\r\n\t\t\t\t\t\t1. Nach Maßgabe des Nutzungsvertrages gewährt CORA dem Nutzer während der Vertragslaufzeit ein einfaches,\r\n\t\t\t\t\t\tnicht\r\n\t\t\t\t\t\tübertragbares, nicht unterlizenzierbares, weltweites Recht, die Dienste ausschließlich zu privaten Zwecken\r\n\t\t\t\t\t\tdes Nutzers\r\n\t\t\t\t\t\tzu nutzen. Die Dienste werden so angeboten wie jeweils aktuell auf der Website von CORA einschließlich dem\r\n\t\t\t\t\t\tAbschnitt über häufig gestellte Fragen (FAQ) („<strong>Dokumentation</strong>“) beschrieben.<br />\r\n\t\t\t\t\t\t2. Der Nutzer darf nicht (und darf nicht gestatten, dass Dritte dies tun) mittelbar oder unmittelbar:<br />\r\n\t\t\t\t\t\ta. die Dienste unterlizenzieren, verkaufen, weiterverkaufen, übertragen, abtreten, vertreiben, teilen,\r\n\t\t\t\t\t\tverpachten,\r\n\t\t\t\t\t\tvermieten, extern geschäftlich nutzen, outsourcen, auf der Basis einer Teilzeitnutzung oder als\r\n\t\t\t\t\t\tServiceunternehmen\r\n\t\t\t\t\t\tnutzen, oder in einer Application Service Provider- oder einer Managed Service Provider-Umgebung nutzen oder\r\n\t\t\t\t\t\tanderweitig Einnahmen aus den Diensten generieren;<br />\r\n\t\t\t\t\t\tb. die Dienste auf ein öffentliches oder verteiltes Netzwerk kopieren;<br />\r\n\t\t\t\t\t\tc. Teile der Dienste dekompilieren, im Wege des Reverse Engineerings rekonstruieren, zerlegen oder auf eine\r\n\t\t\t\t\t\tandere\r\n\t\t\t\t\t\tWeise versuchen, Quellcodes, Objektcodes oder zugrundeliegende(s) strukturelle Ideen, Know-how oder\r\n\t\t\t\t\t\tAlgorithmen\r\n\t\t\t\t\t\toder andere Funktionsmechanismen der Dienste zu erlangen, es sei denn, dies ist im Einzelfall aufgrund\r\n\t\t\t\t\t\tzwingender\r\n\t\t\t\t\t\tgesetzlicher Vorschriften zulässig;<br />\r\n\t\t\t\t\t\td. alle oder einen Teil der Dienste modifizieren, anpassen, übersetzen oder abgeleitete Werke erstellen, die\r\n\t\t\t\t\t\tauf den\r\n\t\t\t\t\t\tDiensten basieren (außer in dem durch CORA gestatteten Umfang oder sofern dies im Rahmen der Dienste\r\n\t\t\t\t\t\tgenehmigt\r\n\t\t\t\t\t\twurde);<br />\r\n\t\t\t\t\t\te. Hinweise auf Eigentumsrechte, die in den Diensten oder Teilen davon erscheinen, modifizieren;<br />\r\n\t\t\t\t\t\tf. die Dienste so nutzen, dass geltende Gesetze und Vorschriften (einschließlich Ausfuhrbestimmungen und\r\n\t\t\t\t\t\t-einschränkungen, nationale Sicherheitskontrollen und -vorschriften) verletzt werden oder außerhalb des in\r\n\t\t\t\t\t\tdieser\r\n\t\t\t\t\t\tZiffer III beschriebenen Lizenzumfangs nutzen;<br />\r\n\t\t\t\t\t\tg. die Dienste konfigurieren, um die folgenden Daten zu erheben:<br />\r\n\t\t\t\t\t\t(i) Daten, die als sensible personenbezogene Daten oder ‚besondere Datenkategorien‘ im Sinne der\r\n\t\t\t\t\t\tDatenschutz-\r\n\t\t\t\t\t\tGrundverordnung („<strong>DSGVO</strong>“) oder anwendbarer nationaler Datenschutzvorschriften gelten;<br />\r\n\t\t\t\t\t\t(ii) Passwörter oder andere Authentifizierungsdaten; oder<br />\r\n\t\t\t\t\t\t(iii) Zahlungsdaten oder andere finanzielle Daten, biometrische Daten oder genetische Daten (gemeinsam\r\n\t\t\t\t\t\t„<strong>Unerlaubte\r\n\t\t\t\t\t\t\tDaten</strong>“); oder<br />\r\n\t\t\t\t\t\th. die Dienste verwenden, um<br />\r\n\t\t\t\t\t\t(i) verletzendes, verleumderisches oder auf andere Weise unrechtmäßiges oder unerlaubtes Material oder\r\n\t\t\t\t\t\tbösartige\r\n\t\t\t\t\t\tCodes oder Malware zu speichern, herunterzuladen oder zu übertragen, oder<br />\r\n\t\t\t\t\t\t(ii) Phishing, Spamming, Denial-of-Service-Angriffen oder anderen betrügerischen oder kriminellen\r\n\t\t\t\t\t\tAktivitäten\r\n\t\t\t\t\t\tnachzugehen;<br />\r\n\t\t\t\t\t\t(iii) die Integrität oder die Leistungsfähigkeit von Systemen Dritter oder die darin enthaltenen Angebote\r\n\t\t\t\t\t\toder Daten zu\r\n\t\t\t\t\t\tbeeinträchtigen oder zu unterbrechen;<br />\r\n\t\t\t\t\t\t(iv) zu versuchen, unerlaubten Zugriff auf die Dienste oder die Systeme oder Netzwerke von CORA zu erlangen;\r\n\t\t\t\t\t\toder<br />\r\n\t\t\t\t\t\t(v) Penetrationstests, Schwachstellenanalysen oder andere Sicherheitsbewertungen durchzuführen oder Dritte\r\n\t\t\t\t\t\tmit deren\r\n\t\t\t\t\t\tDurchführung zu beauftragen.<br />\r\n\t\t\t\t\t\t3. Der Nutzer darf die Inhalte der Dienste nicht ohne die schriftliche Zustimmung von CORA vervielfältigen,\r\n\t\t\t\t\t\tverarbeiten, teilen oder öffentlich wiedergeben, es sei denn dies wird durch Funktionen, welche in Dienste\r\n\t\t\t\t\t\tintegriert\r\n\t\t\t\t\t\tsind, ausdrücklich gestattet.<br />\r\n\t\t\t\t\t\t4. Der Nutzer darf Dienste oder technische Daten, oder Kopien, Teile oder Produkte davon weder direkt noch\r\n\t\t\t\t\t\tindirekt\r\n\t\t\t\t\t\tunter Verletzung geltender Gesetze und Vorschriften exportieren oder re-exportieren.<br />\r\n\t\t\t\t\t\t5. Der Nutzer darf die Dienste nur wie in der Dokumentation beschrieben, nutzen.<br />\r\n\t\t\t\t\t\t6. CORA kann die Nutzung der Dienste durch den Nutzer überwachen und kann eine Nutzung der Dienste\r\n\t\t\t\t\t\tuntersagen\r\n\t\t\t\t\t\tund/oder aussetzen, wenn CORA der Auffassung ist, dass der Nutzer gegen die Bestimmungen dieser Ziffer III\r\n\t\t\t\t\t\tverstößt.</p>\r\n\t\t\t\t\t<p>IV. Pflichten des Nutzers<br />\r\n\t\t\t\t\t\t1. Der Nutzer sichert zu und gewährleistet, dass er die Dienste ausschließlich in vollständiger\r\n\t\t\t\t\t\tÜbereinstimmung mit\r\n\t\t\t\t\t\tallen geltenden Gesetzen und Vorschriften verwendet.<br />\r\n\t\t\t\t\t\t2. Der Nutzer ist dafür verantwortlich, technische Geräte und damit zusammenhängende Zusatzdienste, die für\r\n\t\t\t\t\t\tdie\r\n\t\t\t\t\t\tVerbindung mit, den Zugriff auf oder die sonstige Nutzung der Dienste erforderlich sind, auf eigene Kosten\r\n\t\t\t\t\t\tzu\r\n\t\t\t\t\t\tbeschaffen und instand zu halten, insbesondere Hardware, Software, Server, Betriebssysteme, Netzwerke und\r\n\t\t\t\t\t\tmobile\r\n\t\t\t\t\t\tEndgeräte (gemeinsam „<strong>Technische Ausstattung</strong>“). CORAs Anforderungen an die Technische\r\n\t\t\t\t\t\tAusstattung können in\r\n\t\t\t\t\t\tihrer jeweils aktuellen Fassung auf der Website von CORA eingesehen werden.<br />\r\n\t\t\t\t\t\t3. Der Nutzer ist zudem für die Sicherheit der Technischen Ausstattung sowie jede dem Nutzer bekannte oder\r\n\t\t\t\t\t\tunbekannte Nutzung der Technischen Ausstattung verantwortlich.<br />\r\n\t\t\t\t\t\t4. Der Nutzer ist für die Inhalte aller Daten die von dem Nutzer über oder mit Hilfe der Dienste angezeigt,\r\n\t\t\t\t\t\tveröffentlicht, hochgeladen, gespeichert, ausgetauscht oder übertragen werden (gemeinsam „Inhalte“) allein\r\n\t\t\t\t\t\tverantwortlich. CORA ist nicht in der Lage, die von dem Nutzer während der Nutzung der Dienste übermittelten\r\n\t\t\t\t\t\tInformationen zu kontrollieren oder die Richtigkeit dieser Informationen zu gewährleisten. CORA kann – ohne\r\n\t\t\t\t\t\tvorherige Ankündigung und ohne dafür zu haften – Beschwerden oder mutmaßlichen Verletzungen des\r\n\t\t\t\t\t\tNutzungsvertrages nachgehen und kann gegenüber dem Nutzer Maßnahmen ergreifen, die CORA für angemessen\r\n\t\t\t\t\t\terachtet. Dazu gehören das Beschränken, Sperren oder Kündigen des Zugangs des Nutzers zu den Diensten.<br />\r\n\t\t\t\t\t\t5. Der Nutzer stellt sicher, dass die in den Diensten von ihm hinterlegten Informationen stets aktuell und\r\n\t\t\t\t\t\trichtig sind.\r\n\t\t\t\t\t\tIm Falle einer nicht autorisierten Verwendung oder vermuteten Sicherheitsverletzung oder eines Missbrauchs\r\n\t\t\t\t\t\tder\r\n\t\t\t\t\t\tDienste ist der Nutzer verpflichtet, CORA darüber unverzüglich zu informieren.</p>\r\n\t\t\t\t\t<p>V. Laufzeit und Kündigung<br />\r\n\t\t\t\t\t\t1. Die Laufzeit eines Nutzungsvertrages beginnt zu dem darin bezeichneten Zeitpunkt.<br />\r\n\t\t\t\t\t\t2. Jeder Nutzungsvertrag bleibt auf unbestimmte Zeit in Kraft, sofern er nicht im Einklang mit dem\r\n\t\t\t\t\t\tNutzungsvertrag\r\n\t\t\t\t\t\tgekündigt wird. CORA der der Nutzer können den Nutzungsvertrag jederzeit mit sofortiger Wirkung\r\n\t\t\t\t\t\tkündigen.<br />\r\n\t\t\t\t\t\t3. Das Recht der Parteien zur außerordentlichen Kündigung des Nutzungsvertrages aus wichtigem Grund bleibt\r\n\t\t\t\t\t\tunberührt.</p>\r\n\t\t\t\t\t<p>VI. Eigentumsrechte, Nutzerdaten, IT- Sicherheit und Updates<br />\r\n\t\t\t\t\t\t1. CORA und deren etwaige Auftragnehmer sind und bleiben Eigentümer aller Eigentumsrechte, einschließlich\r\n\t\t\t\t\t\tUrheberrechte Datenbankrechte, Patente, Geschäftsgeheimnisse, Marken und aller anderen Rechten an geistigem\r\n\t\t\t\t\t\tEigentum und technischen Lösungen an und im Zusammenhang mit den Diensten. Der Nutzer erkennt an, dass die\r\n\t\t\t\t\t\tnach\r\n\t\t\t\t\t\teinem Nutzungsvertrag gewährten Rechte dem Nutzer keine Eigentumsrechte an den Diensten verschaffen.<br />\r\n\t\t\t\t\t\t2. Sämtliche Rechte an den Inhalten und an Daten, die der Nutzer CORA zur Verfügung stellt, um die\r\n\t\t\t\t\t\tBereitstellung\r\n\t\t\t\t\t\tder Dienste zu ermöglichen oder die der Kunde während der Nutzung der Dienste zur Verfügung stellt\r\n\t\t\t\t\t\t(„<strong>Nutzerdaten</strong>“), sowie an Daten, die auf den Inhalten oder Nutzerdaten basieren oder davon\r\n\t\t\t\t\t\tabgeleitet sind,\r\n\t\t\t\t\t\tverbleiben bei dem Nutzer. Der Nutzer gewährt CORA ein einfaches, nicht übertragbares, unterlizenzierbares,\r\n\t\t\t\t\t\träumlich\r\n\t\t\t\t\t\tund inhaltlich unbeschränktes (Nutzungs-)Recht, die Inhalte und Nutzerdaten ausschließlich in Verbindung mit\r\n\t\t\t\t\t\tder\r\n\t\t\t\t\t\tErbringung der Dienste zu nutzen. CORA haftet nicht für die Inhalte oder die Nutzerdaten.<br />\r\n\t\t\t\t\t\t3. CORA wird angemessene Maßnahmen ergreifen, um zu gewährleisten, dass die Sicherheit der Dienste\r\n\t\t\t\t\t\tmarktüblichen\r\n\t\t\t\t\t\tIndustriestandards entspricht.<br />\r\n\t\t\t\t\t\t4. CORA behält sich das Recht vor, jederzeit und ohne vorherige Ankündigung neue Versionen und Updates der\r\n\t\t\t\t\t\tDienste, insbesondere Veränderungen der Gestaltung, des operativen Verfahrens, der technischen\r\n\t\t\t\t\t\tSpezifikationen, der\r\n\t\t\t\t\t\tSysteme und anderen Funktionen der Dienste, vorzunehmen.</p>\r\n\t\t\t\t\t<p>VII. Datenschutz<br />\r\n\t\t\t\t\t\t1. Der Nutzer und CORA werden jederzeit die Anforderungen des geltenden Datenschutzrechts, insbesondere der\r\n\t\t\t\t\t\tDSGVO, einhalten.<br />\r\n\t\t\t\t\t\t2. Die Verarbeitung personenbezogener Daten durch CORA wird in CORAs Datenschutzerklärung näher erläutert.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>VIII. Haftungsbeschränkung<br />\r\n\t\t\t\t\t\t1. CORA haftet unbeschränkt für<br />\r\n\t\t\t\t\t\ta. die Verletzung des Lebens, des Körpers oder der Gesundheit durch CORA, deren gesetzliche Vertreter oder\r\n\t\t\t\t\t\tErfüllungsgehilfen<br />\r\n\t\t\t\t\t\tb. orsätzlich oder grob fahrlässig verursachte Schäden durch CORA, deren gesetzliche Vertreter oder\r\n\t\t\t\t\t\tErfüllungsgehilfen<br />\r\n\t\t\t\t\t\tc. Schäden aufgrund des Fehlens einer garantierten Beschaffenheit<br />\r\n\t\t\t\t\t\td. Forderungen aus dem Produkthaftungsgesetz (ProdHaftG)<br />\r\n\t\t\t\t\t\t2. CORA haftet für Schäden aus der Verletzung von Kardinalpflichten durch CORA, deren gesetzliche Vertreter\r\n\t\t\t\t\t\toder\r\n\t\t\t\t\t\tErfüllungsgehilfen. Kardinalpflichten sind die Pflichten, deren Erfüllung die ordnungsgemäße Durchführung\r\n\t\t\t\t\t\tdes\r\n\t\t\t\t\t\tNutzungsvertrages erst ermöglicht und auf deren Einhaltung der Nutzer regelmäßig vertraut und vertrauen\r\n\t\t\t\t\t\tdarf. Sofern\r\n\t\t\t\t\t\tdie Verletzung von Kardinalpflichten durch leichte Fahrlässigkeit von CORA, deren gesetzliche Vertreter oder\r\n\t\t\t\t\t\tErfüllungsgehilfen erfolgt, ist die Haftung von CORA der Höhe nach auf den Betrag begrenzt, der für CORA zum\r\n\t\t\t\t\t\tZeitpunkt der Erbringung der jeweiligen Leistung vorhersehbar war.<br />\r\n\t\t\t\t\t\t3. Vorbehaltlich der Regelungen in Ziffern III.1 und III.2 haftet CORA nicht für Schäden aus der Verletzung\r\n\t\t\t\t\t\tvon\r\n\t\t\t\t\t\tPflichten, die keine Kardinalpflichten darstellen und die leicht fahrlässig durch CORA, deren gesetzliche\r\n\t\t\t\t\t\tVertreter oder\r\n\t\t\t\t\t\tErfüllungsgehilfen verursacht wurden.<br />\r\n\t\t\t\t\t\t4. CORA haftet nicht für dem Nutzer entstandene Verluste, Schäden oder Nachteile, die mittelbar oder\r\n\t\t\t\t\t\tunmittelbar\r\n\t\t\t\t\t\tdurch die nicht autorisierte Verwendung der Dienste zur Verarbeitung Unerlaubter Daten durch den Nutzer\r\n\t\t\t\t\t\tverursacht\r\n\t\t\t\t\t\twurden.<br />\r\n\t\t\t\t\t\t5. CORA haftet für Datenverluste nur bis zu einem Betrag, der den typischen Kosten für die Wiederherstellung\r\n\t\t\t\t\t\tder\r\n\t\t\t\t\t\tbetroffenen Daten entspricht, die entstanden wären, wenn der Nutzer ordnungsgemäße und regelmäßige\r\n\t\t\t\t\t\tDatensicherungen vorgenommen hätte.<br />\r\n\t\t\t\t\t\t6. Vorbehaltlich der Regelung in Ziffern III.1 ist die Haftung von CORA für Schäden aus oder im Zusammenhang\r\n\t\t\t\t\t\tmit\r\n\t\t\t\t\t\teinem Nutzungsvertrag, sei es aus Vertrag, Delikt oder aus anderen Gründen, beschränkt auf einen Betrag von\r\n\t\t\t\t\t\t150%\r\n\t\t\t\t\t\t(einhundertfünfzig Prozent) der Summe der Gebühren unter dem betroffenen Nutzungsvertrag.<br />\r\n\t\t\t\t\t\t7. CORA steht nicht dafür ein, dass keine Ansteckung oder die Verbindung zu allen Gesundheitsämtern\r\n\t\t\t\t\t\tgewährleistet\r\n\t\t\t\t\t\tist.<br />\r\n\t\t\t\t\t\t8. Eine über die in dieser Ziffer VIII geregelten Fälle hinausgehende Haftung von CORA ist ausgeschlossen.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>IX. Abtretungsverbot und Aufrechnungsbeschränkung<br />\r\n\t\t\t\t\t\t1. Der Nutzer darf seine Rechte oder Verpflichtungen aus einem Nutzungsvertrag und diesen\r\n\t\t\t\t\t\tNutzungsbedingungen\r\n\t\t\t\t\t\tnicht ohne die schriftliche Einwilligung von CORA abtreten.<br />\r\n\t\t\t\t\t\t2. Der Nutzer ist nur dann berechtigt, mit eigenen Forderungen gegen Forderungen von CORA aufzurechnen, wenn\r\n\t\t\t\t\t\tseine Forderungen<br />\r\n\t\t\t\t\t\ta. rechtskräftig festgestellt wurden oder<br />\r\n\t\t\t\t\t\tb. unbestritten sind oder<br />\r\n\t\t\t\t\t\tc. von CORA anerkannt wurden</p>\r\n\t\t\t\t\t<p>X. Vollständige Vereinbarung, Salvatorische Klausel, Änderungen und Aktualisierungen<br />\r\n\t\t\t\t\t\t1. Der Nutzungsvertrag einschließlich dieser Nutzungsbedingungen stellt die vollständige Vereinbarung\r\n\t\t\t\t\t\tzwischen dem\r\n\t\t\t\t\t\tNutzer und CORA in Bezug auf seinen Vertragsgegenstand dar und ersetzt alle früheren schriftlichen oder\r\n\t\t\t\t\t\tmündlichen\r\n\t\t\t\t\t\tVerhandlungen, Regelungen, Abreden, Übungen oder Vereinbarungen zwischen den Parteien in Bezug auf den\r\n\t\t\t\t\t\tVertragsgegenstand und schließt diese aus.<br />\r\n\t\t\t\t\t\t2. Sollte eine Regelung des Nutzungsvertrages einschließlich dieser Nutzungsbedingungen, ganz oder teilweise\r\n\t\t\t\t\t\tunwirksam oder nichtig sein oder werden, so wird die Wirksamkeit der übrigen Regelungen davon nicht berührt.\r\n\t\t\t\t\t\tAn die\r\n\t\t\t\t\t\tStelle der unwirksamen oder nichtigen Regelung tritt in diesem Fall eine Regelung, die dem am nächsten\r\n\t\t\t\t\t\tkommt, was\r\n\t\t\t\t\t\tdie Parteien nach dem Sinn und Zweck der ursprünglichen Regelung und des Nutzungsvertrages in gesetzlich\r\n\t\t\t\t\t\tzulässiger\r\n\t\t\t\t\t\tWeise vereinbart hätten, wenn sie die Unwirksamkeit oder Nichtigkeit der ursprünglichen Regelung erkannt\r\n\t\t\t\t\t\thätten.\r\n\t\t\t\t\t\tBeruht die Unwirksamkeit oder Nichtigkeit einer Regelung auf einem darin festgelegten Maß der Leistung oder\r\n\t\t\t\t\t\tder Zeit\r\n\t\t\t\t\t\t(Frist oder Termin), so tritt an deren Stelle eine Regelung mit einem dem ursprünglichen Umfang am nächsten\r\n\t\t\t\t\t\tkommenden rechtlich zulässigen Umfang. Das Vorstehende gilt auch für eine etwaige von den Parteien nicht\r\n\t\t\t\t\t\tbeabsichtigte Regelungslücke in dem Nutzungsvertrag einschließlich dieser Nutzungsbedingungen. Es ist der\r\n\t\t\t\t\t\tausdrückliche Wille der Parteien, dass diese salvatorische Klausel keine bloße Beweislastumkehr zur Folge\r\n\t\t\t\t\t\that, sondern\r\n\t\t\t\t\t\t§ 139 BGB insgesamt abbedungen ist.<br />\r\n\t\t\t\t\t\t3. Änderungen oder Ergänzungen eines Nutzungsvertrages müssen schriftlich erfolgen (der Austausch einfacher\r\n\t\t\t\t\t\tE-\r\n\t\t\t\t\t\tMails ist ausreichend). Dasselbe gilt für Vereinbarungen, von diesem Schriftformerfordernis abzuweichen oder\r\n\t\t\t\t\t\tauf\r\n\t\t\t\t\t\tdieses vollständig zu verzichten.<br />\r\n\t\t\t\t\t\t4. CORA kann diese Nutzungsbedingungen mit Wirkung für die Zukunft ändern und/oder aktualisieren, wenn dies\r\n\t\t\t\t\t\taus\r\n\t\t\t\t\t\ttechnischen, wirtschaftlichen oder rechtlichen Gründen erforderlich ist. Jede Änderung dieser\r\n\t\t\t\t\t\tNutzungsbedingungen\r\n\t\t\t\t\t\twird dem Nutzer in Textform (eine einfache E-Mail ist ausreichend) mindestens sechs Wochen vor ihrem\r\n\t\t\t\t\t\tbeabsichtigten Inkrafttreten angekündigt. Der Nutzer kann der Änderung vor dem Tag ihres beabsichtigten\r\n\t\t\t\t\t\tInkrafttretens zustimmen oder widersprechen. Die Änderung gilt als von dem Nutzer angenommen, wenn der\r\n\t\t\t\t\t\tNutzer\r\n\t\t\t\t\t\tder Änderung nicht vor dem Tag ihres beabsichtigten Inkrafttretens widerspricht. CORA wird den Nutzer in der\r\n\t\t\t\t\t\tentsprechenden Ankündigung ausdrücklich darüber informieren.</p>\r\n\t\t\t\t\t<p>XI. Geltendes Recht und Verbraucherschlichtungsstelle<br />\r\n\t\t\t\t\t\t1. Jeder Nutzungsvertrag und alle (vertraglichen oder außervertraglichen) Streitigkeiten oder Ansprüche, die\r\n\t\t\t\t\t\tdurch oder\r\n\t\t\t\t\t\tin Verbindung mit dem Nutzungsvertrag oder deren Gegenstand oder deren Abschluss entstehen, unterliegen den\r\n\t\t\t\t\t\tzwingenden Gesetzen des Staates, in dem der Nutzer seinen gewöhnlichen Wohnsitz hat (d. h. derjenigen\r\n\t\t\t\t\t\tBestimmungen des Rechts dieses Staates, von denen nicht durch Vereinbarung abgewichen werden kann). Im\r\n\t\t\t\t\t\tÜbrigen\r\n\t\t\t\t\t\tgilt das Recht der Bundesrepublik Deutschland. Das Übereinkommen der Vereinten Nationen über Verträge über\r\n\t\t\t\t\t\tden\r\n\t\t\t\t\t\tinternationalen Warenkauf (CISG) findet keine Anwendung.<br />\r\n\t\t\t\t\t\t2. Die Europäische Kommission betreibt eine Schiedsstelle, die online zu erreichen ist.\r\n\t\t\t\t\t\tCORA ist nicht dazu verpflichtet, an einem Streitbeilegungsverfahren vor dieser Schiedsstelle oder vor einer\r\n\t\t\t\t\t\tanderen\r\n\t\t\t\t\t\tVerbraucherschlichtungsstelle teilzunehmen und dazu auch nicht bereit.</p>\r\n\t\t\t\t\t<p>MATECODE GmbH<br />\r\n\t\t\t\t\t\tRegistergericht: Amtsgericht Stuttgart, HRB771974<br />\r\n\t\t\t\t\t\tSitz der Gesellschaft: Stuttgart<br />\r\n\t\t\t\t\t\tStand der Nutzungsbedingungen: Januar 2021</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"p-field center-container\">\r\n\t\t\t\t<button class=\"orange-button\" (click)=\"confirmClick()\">Zustimmen</button>\r\n\t\t\t\t<button class=\"white-button\" (click)=\"cancelClick()\">Abbrechen</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","import { ApiErrorConfig } from \"../../model/infrastructure/api-error-config\";\r\n\r\nexport const commonErrorConfig: ApiErrorConfig  = {\r\n    'common': [\r\n    { 'tokenNotFound': 'Ungültiges Token.' },\r\n    { 'accessDenied': 'Zugriff verweigert' },\r\n    { 'emailIsEmpty': 'E-Mail ist leer' },\r\n    { 'passwordNotChange': 'Passwort nicht geändert' },\r\n    { 'tokenNotFound': 'Token nicht gefunden' },\r\n    { 'passwordNotChanged': 'Passwort nicht geändert' },\r\n    { 'notConfirmPassword': 'Sie haben das Passwort nicht bestätigt' }\r\n    ]\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { AddressModel, newAddress } from 'src/app/model/profile/address';\r\nimport { SessionService } from 'src/app/service/session.service';\r\nimport { UserService } from '../../service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-address-edit',\r\n  templateUrl: './profile-address-edit.component.html',\r\n  styleUrls: ['./profile-address-edit.component.scss']\r\n})\r\nexport class ProfileAddressEditComponent {\r\n  public modelForm: FormGroup;\r\n  public model: AddressModel;\r\n  public isPressed = false;\r\n\r\n  constructor(private router: Router, private sessionService: SessionService, private modelService: UserService, private messageService: MessageService) {\r\n\r\n    this.model = { ...this.sessionService.activeProfile.address };\r\n    this.modelForm = new FormGroup({\r\n      countryControl: new FormControl(this.model.country),\r\n      regionControl: new FormControl(this.model.region),\r\n      streetControl: new FormControl(this.model.street),\r\n      houseControl: new FormControl(this.model.house),\r\n      zipControl: new FormControl(this.model.zipCode),\r\n      cityControl: new FormControl(this.model.city)\r\n    });\r\n  }\r\n\r\n  public saveClick() {\r\n    this.isPressed = true;\r\n    this.modelService.saveProfileAddress(this.model).subscribe(\r\n      (model) => {\r\n        this.isPressed = false;\r\n        this.sessionService.activeProfile = model\r\n        this.router.navigate(['profile']);\r\n      },\r\n      (error)=>{\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }      \r\n    );\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container p-col-12\">\r\n\t<div class=\"header\">\r\n\t\t<img src=\"assets/images/settings.png\" />\r\n\t\t<div class=\"center-container header-text\">Profil bearbeiten</div>\r\n\t</div>\r\n\r\n\t<form [formGroup]=\"modelForm\">\r\n\t\t<div class=\"center-container\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"streetInput\" formControlName=\"streetControl\" maxlength=\"100\" type=\"text\"\r\n\t\t\t\t\tclass=\"small-input-container\" pInputText [(ngModel)]=\"model.street\" />\r\n\t\t\t\t<label for=\"streetInput\">Straße</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"houseInput\" formControlName=\"houseControl\" maxlength=\"10\" type=\"text\" class=\"small-input-container\"\r\n\t\t\t\t\tpInputText [(ngModel)]=\"model.house\" />\r\n\t\t\t\t<label for=\"houseInput\">Hausnummer</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"zipInput\" formControlName=\"zipControl\" maxlength=\"20\" type=\"text\" class=\"small-input-container\"\r\n\t\t\t\t\tpInputText [(ngModel)]=\"model.zipCode\" />\r\n\t\t\t\t<label for=\"zipInput\">Postleitzahl</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"cityInput\" formControlName=\"cityControl\" maxlength=\"100\" type=\"text\" class=\"small-input-container\"\r\n\t\t\t\t\tpInputText [(ngModel)]=\"model.city\" />\r\n\t\t\t\t<label for=\"cityInput\">Stadt</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"regionInput\" formControlName=\"regionControl\" maxlength=\"100\" maxlength=\"100\" type=\"text\"\r\n\t\t\t\t\tclass=\"small-input-container\" pInputText [(ngModel)]=\"model.region\" />\r\n\t\t\t\t<label for=\"regionInput\">Bundesland</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"countryInput\" formControlName=\"countryControl\" maxlength=\"100\" type=\"text\"\r\n\t\t\t\t\tclass=\"small-input-container\" pInputText [(ngModel)]=\"model.country\" />\r\n\t\t\t\t<label for=\"countryInput\">Land</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"center-container\" style=\"margin-top:15px\">\r\n\t\t\t<button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"saveClick()\">Speichern</button>\r\n\t\t</div>\r\n\t\t<div class=\"center-container\" style=\"margin-top:10px\">\r\n\t\t\t<button class=\"white-button\" [class.button-disabled]=\"isPressed\" routerLink=\"/profile\">Abbrechen</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { ControlConfig } from '../../model/infrastructure/control-config';\r\nimport { ValidatorBase } from '../../model/infrastructure/control-validator';\r\nimport { PersonModel } from '../../model/profile/person';\r\nimport { UserService } from '../../service/user.service';\r\nimport { SessionService } from '../../service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-person-edit',\r\n  templateUrl: './profile-person-edit.component.html',\r\n  styleUrls: ['./profile-person-edit.component.scss']\r\n})\r\nexport class ProfilePersonEditComponent {\r\n\r\n  public modelForm: FormGroup;\r\n  public model: PersonModel;\r\n  public date?: Date;\r\n  public date1 = new Date;\r\n  public isPressed = false;\r\n  public genders = ['männlich', 'weiblich', 'divers'];\r\n\r\n  constructor(private router: Router, private sessionService: SessionService, private modelService: UserService, private messageService: MessageService) {\r\n\r\n    this.model = { ...this.sessionService.activeProfile.person };\r\n    if (this.model.birthDate) {\r\n      this.model.birthDate = new Date(this.model.birthDate)\r\n    }\r\n    this.modelForm = new FormGroup(\r\n      {\r\n        firstNameControl: new FormControl(this.model.firstName),\r\n        lastNameControl: new FormControl(this.model.lastName),\r\n        birthDateControl: new FormControl(this.model.birthDate),\r\n        genderControl: new FormControl(this.model.gender),\r\n      });\r\n  }\r\n\r\n  public saveClick() {\r\n    this.isPressed = true;\r\n    if (this.model.birthDate) {\r\n      const offset = this.model.birthDate.getTimezoneOffset();\r\n      const isoDate = this.model.birthDate.setMinutes(-offset);\r\n      this.model.birthDate = new Date(isoDate);\r\n    }\r\n    this.modelService.saveProfilePerson(this.model).subscribe(\r\n      (model) => {\r\n        this.isPressed = false;\r\n        this.sessionService.activeProfile = model\r\n        this.router.navigate(['profile']);\r\n      },\r\n      (error) => {\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array) {\r\n          error.forEach(item => {\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public get dateRange(): string {\r\n    const lastYear = new Date().getFullYear();\r\n    const firstYear = lastYear - 100;\r\n\r\n    return `${firstYear}:${lastYear}`;\r\n  }\r\n\r\n  public changeGender($event: any) {\r\n    const value: string = $event.target.value;\r\n    this.model.gender = value.split(':')[1].trim();\r\n  }\r\n\r\n  public isGenderSelected(gender: string): boolean{\r\n    if (this.model.gender)\r\n    {\r\n      return this.model.gender === gender;\r\n    }\r\n\r\n    return gender === this.genders[2];\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container p-col-12\">\r\n  <div class=\"header\">\r\n\t\t<img src=\"assets/images/settings.png\" />\r\n\t\t<div class=\"center-container header-text\">Profil bearbeiten</div>\r\n\t</div>\r\n\r\n  <form [formGroup]=\"modelForm\">\r\n    <div class=\"center-container\">\r\n      <span class=\"p-float-label\">\r\n        <input id=\"firstNameInput\" formControlName=\"firstNameControl\" maxlength=\"100\" type=\"text\"\r\n          class=\"small-input-container\" pInputText [(ngModel)]=\"model.firstName\" />\r\n        <label for=\"firstNameInput\">Vorname</label>\r\n      </span>\r\n    </div>\r\n\r\n    <div class=\"center-container standard-indent\">\r\n      <span class=\"p-float-label\">\r\n        <input id=\"lastNameInput\" formControlName=\"lastNameControl\" maxlength=\"100\" type=\"text\"\r\n          class=\"small-input-container\" pInputText [(ngModel)]=\"model.lastName\" />\r\n        <label for=\"lastNameInput\">Nachname</label>\r\n      </span>\r\n    </div>\r\n\r\n    <div class=\"center-container standard-indent\">\r\n      <div class=\"label\">Geschlecht</div>\r\n      <select formControlName=\"genderControl\" class=\"small-input-container\" (change)=\"changeGender($event)\">\r\n        <option *ngFor=\"let gender of genders\" [ngValue]=\"gender\" [selected]=\"isGenderSelected(gender)\">{{gender}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"center-container standard-indent\">\r\n      <span class=\"p-float-label\">\r\n        <p-calendar id=\"calendar\" formControlName=\"birthDateControl\" dateFormat=\"dd.mm.yy\" [(ngModel)]=\"model.birthDate\"\r\n          [monthNavigator]=\"true\" [yearNavigator]=\"true\" [yearRange]=\"dateRange\"></p-calendar>\r\n        <label for=\"calendar\">Geburtsdatum</label>\r\n      </span>\r\n    </div>\r\n\r\n    <div class=\"p-field center-container\" style=\"margin-top:91px\">\r\n      <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"saveClick()\">Speichern</button>\r\n    </div>\r\n    <div class=\"p-field center-container\" style=\"margin-top:20px\">\r\n      <button class=\"white-button\" [class.button-disabled]=\"isPressed\" routerLink=\"/profile\">Abbrechen</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { AddressModel } from 'src/app/model/profile/address';\r\nimport { SessionService } from 'src/app/service/session.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-address-new',\r\n  templateUrl: './profile-address-new.component.html',\r\n  styleUrls: ['./profile-address-new.component.scss']\r\n})\r\nexport class ProfileAddressNewComponent {\r\n  @Output() changeStage: EventEmitter<number>;\r\n  public modelForm: FormGroup;\r\n  public model: AddressModel;\r\n  public isPressed = false;\r\n  \r\n  constructor(private router: Router, private modelService: UserService, private messageService: MessageService, private sessionService: SessionService) {\r\n    this.changeStage = new EventEmitter<number>();\r\n    this.model = {};\r\n    this.modelForm = new FormGroup({\r\n      countryControl: new FormControl(this.model.country),\r\n      regionControl: new FormControl(this.model.region),\r\n      streetControl: new FormControl(this.model.street),\r\n      houseControl: new FormControl(this.model.house),\r\n      zipControl: new FormControl(this.model.zipCode),\r\n      cityControl: new FormControl(this.model.city)\r\n    });\r\n  }\r\n\r\n  public nextClick(){\r\n    this.isPressed = true;\r\n    this.modelService.saveProfileAddress(this.model).subscribe(\r\n      ()=>{\r\n        this.isPressed = false;\r\n        this.changeStage.emit(3);\r\n      },\r\n      (error)=>{\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public cancelClick(){\r\n    this.modelService.canselRegistration().subscribe(\r\n      () => {\r\n      }\r\n    );\r\n    this.sessionService.isRegistrationStarted = false;\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<form [formGroup]=\"modelForm\">\r\n    <div class=\"center-container\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"streetInput\" formControlName=\"streetControl\" maxlength=\"100\"  type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"model.street\" />\r\n            <label for=\"streetInput\">Straße</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"houseInput\" formControlName=\"houseControl\" maxlength=\"10\" type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"model.house\" />\r\n            <label for=\"houseInput\">Hausnummer</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"zipInput\" formControlName=\"zipControl\" maxlength=\"20\" type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"model.zipCode\" />\r\n            <label for=\"zipInput\">Postleitzahl</label>\r\n        </span>\r\n    </div>       \r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"cityInput\" formControlName=\"cityControl\" maxlength=\"100\"  type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"model.city\" />\r\n            <label for=\"cityInput\">Stadt</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"regionInput\" formControlName=\"regionControl\" maxlength=\"100\" type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"model.region\" />\r\n            <label for=\"regionInput\">Bundesland</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"countryInput\" formControlName=\"countryControl\" maxlength=\"100\" type=\"text\" class=\"small-input-container\" pInputText [(ngModel)]=\"model.country\" />\r\n            <label for=\"countryInput\">Land</label>\r\n        </span>\r\n    </div>         \r\n    <div class=\"center-container\" style=\"margin-top:20px\">\r\n        <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"nextClick()\">Weiter</button>\r\n    </div>\r\n    <div class=\"center-container\" style=\"margin-top:10px\">\r\n        <button class=\"white-button\" [class.button-disabled]=\"isPressed\" (click)=\"cancelClick()\">Abbrechen</button>\r\n    </div>                      \r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { UserService } from 'src/app/service/user.service'\r\nimport { AuthService } from '../../service/auth.service';\r\nimport { SessionService } from '../../service/session.service';\r\nimport { calendar_DE } from '../../const/de-calendar.constant';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  constructor(private authService: AuthService,\r\n    private sessionService: SessionService,\r\n    private profileService: UserService,\r\n    private router: Router,\r\n    private primeNGConfig: PrimeNGConfig) { }\r\n\r\n  ngOnInit(): void {\r\n    this.primeNGConfig.setTranslation(calendar_DE);\r\n    const refreshToken = this.authService.refreshToken;\r\n    const passportToken = this.authService.passwordToken;\r\n    const hasRefreshToken = refreshToken && refreshToken !== '';\r\n    const hasPassportToken = passportToken && passportToken !== '';\r\n    if (hasRefreshToken || hasPassportToken) {\r\n      if (hasRefreshToken) {\r\n        this.authService.accessToken = refreshToken;\r\n        this.loginWithRefreshToken();\r\n      }\r\n      else {\r\n        this.authService.accessToken = passportToken;\r\n        this.router.navigate(['changepassword']);\r\n      }\r\n    }\r\n    else {\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n  private loginWithRefreshToken() {\r\n    this.authService\r\n      .restoreToken()\r\n      .pipe(tap(() => {\r\n        this.profileService.getProfile()\r\n          .subscribe(\r\n            (model) => {\r\n              this.sessionService.activeProfile = model;\r\n            })\r\n      }),\r\n        catchError((error) => { throw (error) }))\r\n      .subscribe((response) => {\r\n        this.sessionService.session.isVeryfied = response.verified;\r\n        this.sessionService.session.isCheckedIn = response.checked;\r\n        this.sessionService.session.lotNumber = response.lotNumber;\r\n        const path = response.checked ? 'check-out' : 'check-in';\r\n        this.router.navigate([path]);\r\n      },\r\n        () => {\r\n          this.router.navigate(['login'])\r\n        });\r\n  }\r\n}\r\n","<div class=\"p-d-flex p-flex-row p-flex-inline p-jc-center main-component\">\r\n  <p-toast></p-toast>\r\n  <router-outlet></router-outlet>\r\n  <!--<div>\r\n\r\n\r\n  </div>-->\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ToastModule } from 'primeng/toast'\r\nimport {ProgressSpinnerModule} from 'primeng/progressspinner'\r\n\r\nimport { LayoutComponent } from './component/layout/layout.component';\r\nimport { LoginComponent } from './component/login/login.component';\r\nimport { ForgotPasswordComponent } from './component/forgot-password/forgot-password.component';\r\nimport { CheckInComponent } from './component/check-in/check-in.component';\r\nimport { CheckOutComponent } from './component/check-out/check-out.component';\r\nimport { VerificationComponent } from './component/verification/verification.component';\r\nimport { AuthService } from './service/auth.service';\r\nimport { ConfigService } from './service/config.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { AgreementComponent } from './component/agreement/agreement.component';\r\nimport { SessionService } from './service/session.service';\r\nimport { AuthInterceptor } from './service/interceptor/auth.interceptor';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport { ProfilePersonEditComponent } from './component/profile-person-edit/profile-person-edit.component';\r\nimport { ProfileAddressEditComponent } from './component/profile-address-edit/profile-address-edit.component';\r\nimport { ProfileContactEditComponent } from './component/profile-contact-edit/profile-contact-edit.component';\r\nimport { ErrorService } from './service/error.service';\r\nimport { ProfilePersonNewComponent } from './component/profile-person-new/profile-person-new.component';\r\nimport { ProfileAddressNewComponent } from './component/profile-address-new/profile-address-new.component';\r\nimport { ProfileContactNewComponent } from './component/profile-contact-new/profile-contact-new.component';\r\nimport { ChangePasswordComponent } from './component/change-password/change-password.component';\r\nimport { GuestService } from './service/guest.service';\r\nimport { UserService } from './service/user.service';\r\nimport { VaccineListComponent } from './component/vaccine-list/vaccine-list.component';\r\nimport { ShareDataComponent } from './component/share-data/share-data.component';\r\nimport { ProfileNewComponent } from './component/profile-new/profile-new.component';\r\nimport { APP_BASE_HREF, LocationStrategy, HashLocationStrategy } from '@angular/common'; // #new\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    InputTextModule,\r\n    ButtonModule,\r\n    RadioButtonModule,\r\n    CheckboxModule,\r\n    PasswordModule,\r\n    CalendarModule,\r\n    ToastModule,\r\n    ProgressSpinnerModule,\r\n    AppRoutingModule\r\n  ],\r\n  declarations: [\r\n    LayoutComponent,\r\n    LoginComponent,\r\n    ForgotPasswordComponent,\r\n    CheckInComponent,\r\n    CheckOutComponent,\r\n    VerificationComponent,\r\n    AgreementComponent,\r\n    ProfileComponent,\r\n    ProfileAddressEditComponent,\r\n    ProfilePersonEditComponent,\r\n    ProfileContactEditComponent,\r\n    ProfilePersonNewComponent,\r\n    ProfileAddressNewComponent,\r\n    ProfileContactNewComponent,\r\n    ChangePasswordComponent,\r\n    VaccineListComponent,\r\n    ShareDataComponent,\r\n    ProfileNewComponent\r\n  ],\r\n  providers: [\r\n    { provide: APP_BASE_HREF, useValue: '/' }, //#new \r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }, // #new\r\n    ConfigService, \r\n    AuthService, \r\n    SessionService, \r\n    UserService, \r\n    MessageService,\r\n    ErrorService,\r\n    GuestService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [LayoutComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { ChangePasswordRequest } from 'src/app/model/security/change-password-request';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-confirm-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent {\r\n  public modelForm: FormGroup;\r\n  public model: ChangePasswordRequest;\r\n  public isPressed = false;\r\n  public showPassword = false;\r\n  public showPasswordAgain = false;\r\n\r\n  constructor(private router: Router, private authSrevice: AuthService, private messageService: MessageService) { \r\n    this.model = {};\r\n    this.modelForm = new FormGroup({\r\n      passwordControl: new FormControl(this.model.password),\r\n      confirmPasswordControl: new FormControl(this.model.confirmPassword)\r\n    })\r\n  }\r\n\r\n  public resetClick(){\r\n    this.isPressed = true;\r\n    if (this.authSrevice.passwordToken){\r\n      this.authSrevice.accessToken = this.authSrevice.passwordToken;\r\n      this.authSrevice.passwordToken = null;\r\n    }\r\n    this.authSrevice.changePassword(this.model).subscribe(\r\n      ()=>{\r\n        this.authSrevice.accessToken = null;\r\n        const message: Message = {\r\n          severity: 'info', summary: 'Servicemeldung', detail: 'Dein Passwort wurde erfolgreich geändert'};\r\n        this.messageService.add(message);\r\n        this.isPressed = false; \r\n        this.router.navigate(['login']);\r\n      },\r\n      (error)=>{\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n  public cancelClick(){\r\n    this.authSrevice.passwordToken = null;\r\n    this.authSrevice.accessToken = null;\r\n    this.router.navigate(['login']); \r\n  }\r\n\r\n  public get passwordType(){\r\n    return this.showPassword ? 'text' : 'password';\r\n  }\r\n\r\n  public get passwordAgainType(){\r\n    return this.showPasswordAgain ? 'text' : 'password';\r\n  }\r\n\r\n}\r\n","<div class=\"p-fluid main-container p-col-12\">\r\n    <p-progressSpinner *ngIf=\"isPressed\" styleClass=\"custom-spinner\"></p-progressSpinner>\r\n    <div class=\"center-container header-image-container\">\r\n      <img src=\"assets/forgotpassword.jpg\" />\r\n    </div>\r\n    <div class=\"p-field center-container attension-text\">\r\n      Neues Passwort vergeben\r\n    </div>\r\n    <form [formGroup]=\"modelForm\" class=\"first-indent\">\r\n      <div class=\"p-field center-container\">\r\n        <span class=\"password-input p-input-icon-right\" style=\"width: 350px!important;\">\r\n          <i *ngIf=\"!showPassword\" class=\"pi pi-eye\"  (click)=\"showPassword=!showPassword\"></i>\r\n          <i *ngIf=\"showPassword\" class=\"pi pi-eye-slash\"  (click)=\"showPassword=!showPassword\"></i>\r\n          <input [type]=\"passwordType\" pPassword formControlName=\"passwordControl\" class=\"big-input-container\" style=\"width: 350px!important; padding-left: 60px\" pInputText placeholder=\"Passwort\" [(ngModel)]=\"model.password\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"p-field center-container\" class=\"standard-indent\">\r\n        <span class=\"password-again-input p-input-icon-right\" style=\"width: 350px;\">\r\n          <i *ngIf=\"!showPasswordAgain\" class=\"pi pi-eye\"  (click)=\"showPasswordAgain=!showPasswordAgain\"></i>\r\n          <i *ngIf=\"showPasswordAgain\" class=\"pi pi-eye-slash\"  (click)=\"showPasswordAgain=!showPasswordAgain\"></i>\r\n          <input [type]=\"passwordAgainType\" pPassword formControlName=\"confirmPasswordControl\" class=\"big-input-container\" style=\"width: 350px!important; padding-left: 60px\" pInputText placeholder=\"Passwort wiederholen\" [(ngModel)]=\"model.confirmPassword\" />\r\n        </span>\r\n      </div>\r\n      <div class=\"p-field center-container\" style=\"margin-top:91px\">\r\n        <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"resetClick()\">Speichern</button>\r\n      </div>\r\n      <div class=\"p-field center-container\" style=\"margin-top:20px\">\r\n        <button class=\"white-button\" [class.button-disabled]=\"isPressed\" (click)=\"cancelClick()\">Abbrechen</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n","import { ApiErrorConfig } from \"../../model/infrastructure/api-error-config\";\r\n\r\nexport const autErrorConfig: ApiErrorConfig  = {\r\n  'api/auth':\r\n    [\r\n      {'loginOrPasswordNotFound': 'Ungültige Anmeldung und / oder ungültiges Passwort.' },\r\n      {'emailNotFound': 'E-Mail nicht gefunden.' },\r\n      {'cellularNotFound': 'Telefon nicht gefunden.' },\r\n      {'emptyLogin': 'Login darf nicht leer sein' },\r\n      {'notificationNotSend': 'Benachrichtigung wurde nicht gesendet' }\r\n    ]\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ObservableInput, throwError } from 'rxjs';\r\nimport { catchError, mergeMap } from 'rxjs/operators';\r\nimport { AppConfig } from '../model/app-config';\r\nimport { ConfigService } from './config.service';\r\nimport { ErrorService } from './error.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport abstract class BaseService {\r\n\r\n  constructor(protected configService: ConfigService, \r\n              protected errorService: ErrorService, \r\n              protected messageService: MessageService,\r\n              private router: Router,\r\n              protected client: HttpClient) { }\r\n\r\n  protected mergeWithConfigRequest<Out, T extends ObservableInput<Out>>(project: (value: AppConfig | null, index: number) => T) {\r\n    return this.configService\r\n    .config\r\n    .pipe(mergeMap(project));\r\n  }\r\n\r\n  protected callGet<Out>(path?: string) {\r\n    return this.mergeWithConfigRequest(config => {\r\n      return this.client\r\n                 .get<Out>(this.getPath(path, config))\r\n                 .pipe(catchError(error => this.processHttpErrorRespone(error)));\r\n    })\r\n  }\r\n\r\n  protected callPost<In, Out>(model: In, path?: string) {\r\n    return this.mergeWithConfigRequest(config => {\r\n      return this.client\r\n                 .post<Out>(this.getPath(path, config), model)\r\n                 .pipe(catchError(error => this.processHttpErrorRespone(error)));\r\n    })\r\n  }\r\n\r\n  protected callPut<In, Out>(model: In, path: string) {\r\n    return this.mergeWithConfigRequest(config => {\r\n      return this.client.put<Out>(this.getPath(path, config), model)\r\n                 .pipe(catchError(error => this.processHttpErrorRespone(error)));\r\n    })\r\n  }\r\n\r\n  protected callDelete(path: string) {\r\n    return this.mergeWithConfigRequest(config => {\r\n      return this.client.delete(this.getPath(path, config))\r\n                 .pipe(catchError(error => this.processHttpErrorRespone(error)));\r\n    })\r\n  }\r\n\r\n  protected abstract get controller(): string\r\n\r\n  private getPath(path: string|undefined, config: AppConfig | null): string {\r\n    if (path === undefined || path === '') {\r\n      return `${config?.apiUrl}/${this.controller}`\r\n    } else {\r\n      return `${config?.apiUrl}/${this.controller}/${path}`;\r\n    }\r\n  }\r\n\r\n  private processHttpErrorRespone(error: HttpErrorResponse) {\r\n    const messageList: string[] = [];\r\n    let hasTokenError = false;\r\n    if (error.error instanceof ErrorEvent) {\r\n      messageList.push(error.error.message);\r\n    }\r\n    else {\r\n      const status = error.status;\r\n      if (status === 500 || status === 405){\r\n        messageList.push('Dienst nicht verfügbar');\r\n      }\r\n      if ('errors' in error.error) {\r\n        const errorArray = error.error.errors as Array<string>;\r\n        hasTokenError = (errorArray.filter(item=>item === this.errorService.invalidTokenKey))?.length > 0;\r\n        const message = hasTokenError ? this.errorService.invalidTokenError : this.errorService.getServiceError(this.controller, errorArray[0]);\r\n        messageList.push(message);\r\n      }\r\n      else {\r\n        messageList.push(error.message);\r\n      }\r\n    }\r\n    if (hasTokenError){\r\n      this.router.navigate(['login']);\r\n    }\r\n    return throwError(messageList);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { ContactModel } from 'src/app/model/profile/contact';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { SessionService } from 'src/app/service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-contact-new',\r\n  templateUrl: './profile-contact-new.component.html',\r\n  styleUrls: ['./profile-contact-new.component.scss']\r\n})\r\nexport class ProfileContactNewComponent {\r\n\r\n  public modelForm: FormGroup;\r\n  public model: ContactModel;\r\n  public phoneAgain?: string;\r\n  public emailAgain?: string;\r\n  public passwordAgain?: string;\r\n  public isPressed = false;\r\n  public showPassword = false;\r\n  public showPasswordAgain = false\r\n\r\n  constructor(private router: Router, private modelService: UserService, private authService: AuthService, private sessionService: SessionService, private messageService: MessageService) { \r\n    this.model= {};\r\n    this.modelForm = new FormGroup({\r\n      phoneControl: new FormControl(this.model.cellular),\r\n      phoneAgainControl: new FormControl(this.phoneAgain),\r\n      emailControl: new FormControl(this.model.email),\r\n      emailAgainControl: new FormControl(this.emailAgain),\r\n      passwordControl: new FormControl(this.model.password),\r\n      passwordAgainControl: new FormControl(this.passwordAgain)\r\n    });\r\n  }\r\n\r\n  public registerClick(){\r\n    this.isPressed = true;\r\n    const errorList: string[] = [];\r\n    if (!this.checkControl('phoneControl', 'phoneAgainControl')) {\r\n      errorList.push('Phones must be equal');\r\n    }\r\n    if (!this.checkControl('emailControl', 'emailAgainControl')) {\r\n      errorList.push('Emails must be equal');\r\n    }\r\n    if (!this.checkControl('passwordControl', 'passwordAgainControl')) {\r\n      errorList.push('Passwords must be equal');\r\n    }\r\n    if (errorList.length > 0)\r\n    {\r\n      const message: Message = { severity: 'error', summary: 'Error', detail: errorList[0] };\r\n      this.messageService.add(message);\r\n      this.isPressed = false;\r\n\r\n      return;\r\n    }\r\n\r\n    this.modelService.saveProfileContact(this.model).subscribe(\r\n      (model)=>{\r\n        this.isPressed = false;\r\n        this.sessionService.activeProfile = model;\r\n        this.sessionService.isRegistrationStarted = false;\r\n        this.authService.accessToken = null;\r\n        this.router.navigate(['verification']);\r\n      },\r\n      (error)=>{\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public get passwordType(){\r\n    return this.showPassword ? 'text' : 'password';\r\n  }\r\n\r\n  public get passwordAgainType(){\r\n    return this.showPasswordAgain ? 'text' : 'password';\r\n  }\r\n  \r\n  private checkControl(name1: string, name2: string): boolean {\r\n    const control1 = this.modelForm.get(name1);\r\n    const control2 = this.modelForm.get(name2);\r\n\r\n    return control1 && control2 && control1.value === control2.value ? true : false;\r\n  }\r\n\r\n  public cancelClick(){\r\n    this.modelService.canselRegistration().subscribe(\r\n      ()=>{\r\n        this.sessionService.isRegistrationStarted = false;\r\n      }\r\n    );\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container\">\r\n\t<!-- <div class=\"header\">\r\n\t\t<img src=\"assets/images/register.png\" />\r\n\t\t<div class=\"center-container header-text\">Registrierung (3/3)</div>\r\n\t</div> -->\r\n\r\n\t<!-- <div class=\"p-grid status-bar-container\">\r\n\t\t<div class=\"p-col-12 status-bar-item-active\"></div>\r\n\t</div> -->\r\n\r\n\t<form [formGroup]=\"modelForm\">\r\n\t\t<div class=\"center-container\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"phoneInput\" formControlName=\"phoneControl\" maxlength=\"100\" type=\"text\" class=\"small-input-container\"\r\n\t\t\t\t\tpInputText [(ngModel)]=\"this.model.cellular\" />\r\n\t\t\t\t<label for=\"phoneInput\">Telefonnummer</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"phoneAgainInput\" formControlName=\"phoneAgainControl\" maxlength=\"100\" type=\"text\"\r\n\t\t\t\t\tclass=\"small-input-container\" pInputText [(ngModel)]=\"phoneAgain\" />\r\n\t\t\t\t<label for=\"phoneAgainInput\">Telefonnummer (wiederholen)</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"emailInput\" formControlName=\"emailControl\" type=\"text\" maxlength=\"100\" class=\"small-input-container\"\r\n\t\t\t\t\tpInputText [(ngModel)]=\"this.model.email\" />\r\n\t\t\t\t<label for=\"emailInput\">E-Mail</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input id=\"emailAgainInput\" formControlName=\"emailAgainControl\" maxlength=\"100\" type=\"text\"\r\n\t\t\t\t\tclass=\"small-input-container\" pInputText [(ngModel)]=\"emailAgain\" />\r\n\t\t\t\t<label for=\"emailAgainInput\">E-Mail (wiederholen)</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label p-input-icon-right\">\r\n\t\t\t\t<i *ngIf=\"!showPassword\" class=\"pi pi-eye\" (click)=\"showPassword=!showPassword\"></i>\r\n\t\t\t\t<i *ngIf=\"showPassword\" class=\"pi pi-eye-slash\" (click)=\"showPassword=!showPassword\"></i>\r\n\t\t\t\t<input id=\"passwordInput\" formControlName=\"passwordControl\" maxlength=\"100\" [type]=\"passwordType\"\r\n\t\t\t\t\tclass=\"small-input-container\" pInputText [(ngModel)]=\"this.model.password\" />\r\n\t\t\t\t<label for=\"passwordInput\">Passwort</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container standard-indent\">\r\n\t\t\t<span class=\"p-float-label p-input-icon-right\">\r\n\t\t\t\t<i *ngIf=\"!showPasswordAgain\" class=\"pi pi-eye\" (click)=\"showPasswordAgain=!showPasswordAgain\"></i>\r\n\t\t\t\t<i *ngIf=\"showPasswordAgain\" class=\"pi pi-eye-slash\" (click)=\"showPasswordAgain=!showPasswordAgain\"></i>\r\n\t\t\t\t<input id=\"passwordAgainInput\" formControlName=\"passwordAgainControl\" maxlength=\"100\" [type]=\"passwordAgainType\"\r\n\t\t\t\t\tclass=\"small-input-container\" pInputText [(ngModel)]=\"passwordAgain\" />\r\n\t\t\t\t<label for=\"passwordAgainInput\">Passwort (wiederholen)</label>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div class=\"center-container\" style=\"margin-top:20px\">\r\n\t\t\t<button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"registerClick()\">Abschließen</button>\r\n\t\t</div>\r\n\t\t<div class=\"center-container\" style=\"margin-top:10px\">\r\n\t\t\t<button class=\"white-button\" [class.button-disabled]=\"isPressed\" (click)=\"cancelClick()\">Abbrechen</button>\r\n\t\t</div>\r\n\t</form>\r\n</div>","import { ApiErrorConfig } from \"../../model/infrastructure/api-error-config\";\r\n\r\nexport const userErrorConfig: ApiErrorConfig  = {\r\n  'api/user': [\r\n    {'emptyFirstName': 'Der Vorname darf nicht leer sein.' },\r\n    {'emptyLastName': 'Nachname darf nicht leer sein.' },\r\n    {'inccorectBirthDate': 'Falsches Geburtsdatum.' },\r\n    {'emptyCountry': 'Land kann nicht leer sein.' },\r\n    {'emptyCity': 'Stadt kann nicht leer sein.' },\r\n    {'emptyStreet': 'Straße kann nicht leer sein.' },\r\n    {'emptyHouse': 'Haus kann nicht leer sein.' },\r\n    {'emptyPassword': 'Passwort darf nicht leer sein.' },\r\n    {'badPassword': 'Falsches Passwort.' },\r\n    {'inccorectEmail': 'Ungültige E-Mail.' },\r\n    {'inccorectCellular': 'Ungültiges Telefon.' },\r\n    {'notAcceptSharedData': 'Datenfreigabe akzeptieren ist nicht ausgewählt.' },\r\n    {'notAcceptAgreement': 'Vereinbarung akzeptieren ist nicht ausgewählt.' },\r\n    {'emailIsExists': 'Mitarbeiter mit einer solchen E-Mail ist bereits vorhanden' },\r\n    {'emailIsExists': 'Mitarbeiter mit einem solchen Telefon ist bereits vorhanden' },\r\n    {'existesEmail': 'Mitarbeiter mit einem solchen Telefon ist bereits vorhanden' },\r\n    {'existCellular': 'Mitarbeiter mit einem solchen Telefon ist bereits vorhanden' },\r\n    {'cantVerifyProfile': 'Ungültiger PIN-Code'},\r\n    {'locationNotFound': 'Ort nicht gefunden.'}    \r\n  ]\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { tap } from 'rxjs/operators';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { ControlConfig } from '../../model/infrastructure/control-config';\r\nimport { ValidatorBase } from '../../model/infrastructure/control-validator';\r\nimport { LoginRequestModel } from '../../model/security/login-request';\r\nimport { AuthService } from '../../service/auth.service';\r\nimport { SessionService } from '../../service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public rememberMe: string[];\r\n  public modelForm: FormGroup;\r\n  public model: LoginRequestModel;\r\n  public isPressed = false;\r\n  public showPassword = false;\r\n\r\n  private controlConfigArray: ControlConfig[];\r\n\r\n  constructor(private authService: AuthService, private profileService: UserService, private sessionService: SessionService, private router: Router, private messageService: MessageService) {\r\n    this.model = {\r\n      name: '',\r\n      password: '',\r\n      isRemember: false\r\n    }\r\n    this.rememberMe = [];\r\n    this.modelForm = new FormGroup({\r\n      loginControl: new FormControl(this.model.name, [Validators.required]),\r\n      passwordControl: new FormControl(this.model.password, [Validators.required]),\r\n      rememberMeControl: new FormControl('')\r\n    });\r\n    this.controlConfigArray = [\r\n      { key: 'loginControl', validatorList: [ValidatorBase.requiredValidator('Login ist leer')] },\r\n      { key: 'passwordControl', validatorList: [ValidatorBase.requiredValidator('Passwort ist leer')]},\r\n    ];\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.sessionService.isRegistrationStarted){\r\n      this.profileService.canselRegistration().subscribe(\r\n        () => {\r\n          this.sessionService.isRegistrationStarted = false;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public loginClick() {\r\n    this.isPressed = true;\r\n    if (!this.isFormValid) {\r\n      this.isPressed = false;\r\n      return;\r\n    }\r\n    if (this.rememberMe.length > 0) {\r\n      this.model.isRemember = true;\r\n    }\r\n    this.authService.login(this.model)\r\n      .pipe(tap((response) => {\r\n        this.sessionService.session.isCheckedIn = response.checked;\r\n        this.sessionService.session.lotNumber = response.lotNumber;\r\n        this.profileService.getProfile().subscribe(\r\n          (model) => { this.sessionService.activeProfile = model }\r\n        )\r\n      }))\r\n      .subscribe(\r\n      (response) => {\r\n        if (!response.verified) {\r\n          this.router.navigate(['verification']);\r\n        } \r\n        else {\r\n          const path = response.checked ? 'check-out' : 'check-in';\r\n          this.router.navigate([path]);\r\n        }\r\n      },\r\n        (error) => {\r\n          this.isPressed = false;\r\n          if (error && error instanceof Array)\r\n          {\r\n            error.forEach(item =>{\r\n              const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n              this.messageService.add(message);\r\n            })\r\n          }\r\n      },\r\n    );\r\n  }\r\n\r\n  public get passwordType(){\r\n    return this.showPassword ? 'text' : 'password';\r\n  }\r\n  \r\n  private get isFormValid(): boolean {\r\n    const messageList: Message[] = [];\r\n\r\n    this.controlConfigArray.forEach(config => {\r\n      config.validatorList?.forEach(validator => {\r\n        const error = validator.validate(this.modelForm.get(config.key), '');\r\n        if (error !== null) {\r\n          const message: Message = { severity: 'error', summary: 'Error', detail: error }\r\n          messageList.push(message);\r\n        }\r\n      })\r\n    })\r\n\r\n    if (messageList.length > 0) {\r\n      this.messageService.addAll(messageList);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <p-progressSpinner *ngIf=\"isPressed\" styleClass=\"custom-spinner\"></p-progressSpinner>\r\n\r\n  <div class=\"header\">\r\n    <img src=\"assets/images/login.jpg\" />\r\n    <div class=\"center-container header-text\">CORA</div>\r\n  </div>\r\n\r\n  <form [formGroup]=\"modelForm\" class=\"login-form\">\r\n    <div class=\"input-container large\">\r\n      <div class=\"icon-container user-icon\">\r\n        <input type=\"text\" formControlName=\"loginControl\" class=\"input\" pInputText\r\n          placeholder=\"E-Mail oder Telefonnummer\" [(ngModel)]=\"model.name\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"input-container large\">\r\n      <div class=\"icon-container password-icon\">\r\n        <input [type]=\"passwordType\" pPassword formControlName=\"passwordControl\" class=\"input\" placeholder=\"Passwort\"\r\n          [(ngModel)]=\"model.password\">\r\n        <i *ngIf=\"!showPassword\" class=\"pi pi-eye\" (click)=\"showPassword=!showPassword\"></i>\r\n        <i *ngIf=\"showPassword\" class=\"pi pi-eye-slash\" (click)=\"showPassword=!showPassword\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"additional-buttons-container\">\r\n      <div class=\"p-field-checkbox\">\r\n        <p-checkbox name=\"rememberMe\" formControlName=\"rememberMeControl\" value=\"true\" [(ngModel)]=\"rememberMe\"\r\n          inputId=\"rememberMe\">\r\n        </p-checkbox>\r\n        <label for=\"rememberMe\">Eingeloggt bleiben</label>\r\n      </div>\r\n      <p-button styleClass=\"p-button-link\" [class.button-disabled]=\"isPressed\" routerLink=\"/forgotpassword\"\r\n          label=\"Passwort vergessen?\"></p-button>\r\n    </div>\r\n\r\n    <div class=\"button-container\">\r\n      <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"loginClick()\">Einloggen</button>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"p-d-flex p-d-col p-jc-between center-container\">\r\n    <div style=\"font-weight: 700; margin-top: 12px;\">\r\n      <label style=\"font-weight:700\">Noch nicht registriert?</label>\r\n    </div>\r\n    <div>&nbsp;</div>\r\n    <div style=\"font-weight:700\">\r\n      <p-button styleClass=\"p-button-link\" [class.button-disabled]=\"isPressed\" label=\"Registrieren\"\r\n        routerLink=\"/profile/new\"></p-button>\r\n    </div>\r\n  </div>\r\n</div>","import { AppErrorConfig } from \"src/app/model/infrastructure/app-error-config\";\r\nimport { autErrorConfig } from \"./auth-error-config\";\r\nimport { commonErrorConfig } from \"./common-error-config\";\r\nimport { userErrorConfig } from './user-error-config';\r\n\r\nexport const coraErrorConfig: AppErrorConfig = {\r\n  errors:[\r\n    commonErrorConfig,\r\n    autErrorConfig,\r\n    userErrorConfig\r\n  ]\r\n}\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { AuthService } from '../../service/auth.service';\r\nimport { GuestService } from '../../service/guest.service';\r\nimport { SessionService } from '../../service/session.service';\r\nimport  jsQR, { QRCode } from 'jsqr'\r\nimport { Point } from 'jsqr/dist/locator';\r\nimport { QrCodeModel } from '../../model/qrCode';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-check-in',\r\n  templateUrl: './check-in.component.html',\r\n  styleUrls: ['./check-in.component.scss']\r\n})\r\nexport class CheckInComponent implements OnInit, AfterViewInit {\r\n  imageContainer: HTMLElement | null;\r\n  cameraContainer: HTMLElement | null;\r\n  canvasElement: HTMLCanvasElement | null = null;\r\n  canvasContext: CanvasRenderingContext2D | null = null;\r\n  video: HTMLVideoElement | null = null;\r\n  videoStatus?: string = undefined;\r\n  hasCamera = false;\r\n  startedScanning = false;\r\n  isPressed = false;\r\n  isReady = false;\r\n\r\n  private cameraProblem?: string = undefined\r\n\r\n  constructor(private router: Router, private messageService: MessageService, private sessionService: SessionService, private modelService: GuestService, private authService: AuthService) {\r\n    this.imageContainer = document.getElementById('imageContainer');\r\n    this.cameraContainer = document.getElementById('cameraContainer');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const localQrCode = this.modelService.localQrCode;\r\n    if (localQrCode) {\r\n      const model: QrCodeModel = { qrCode: localQrCode };\r\n      this.modelService\r\n        .checkIn(model).subscribe(\r\n          () => {\r\n            this.modelService.localQrCode = null;\r\n            this.sessionService.session.isCheckedIn = true;\r\n            this.router.navigate(['check-out']);\r\n          },\r\n          (error) => {\r\n            this.modelService.localQrCode = null;\r\n            if (error && error instanceof Array) {\r\n              error.forEach(item => {\r\n                const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n                this.messageService.add(message);\r\n              })\r\n            }\r\n          });       \r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.imageContainer = document.getElementById('imageContainer');\r\n    this.cameraContainer = document.getElementById('cameraContainer');\r\n    if (this.cameraContainer) {\r\n      this.cameraContainer.style.display = 'none';\r\n    }\r\n    this.video = document.createElement('video') as HTMLVideoElement;\r\n    this.canvasElement = document.querySelector('canvas');\r\n    this.canvasContext = this.canvasElement?.getContext('2d') as CanvasRenderingContext2D;\r\n  }\r\n\r\n  public settingsClick() {\r\n    this.router.navigate(['test']);\r\n  }\r\n\r\n  public scanClick() {\r\n    this.startedScanning = true;\r\n    navigator.mediaDevices\r\n             .getUserMedia({ audio: false, video: { facingMode: 'environment' }})\r\n             .then((stream: MediaStream) => {\r\n               if (this.imageContainer) {\r\n                 this.imageContainer.style.display = 'none';\r\n               }\r\n               if (this.cameraContainer) {\r\n                 this.cameraContainer.style.display = 'block';\r\n               }\r\n               if (this.video) {\r\n                 this.video.srcObject = stream;\r\n                 this.video.setAttribute('playsinline', 'true');\r\n                 this.video.play();\r\n                 requestAnimationFrame(this.tick.bind(this));\r\n               }\r\n               else{\r\n                this.cameraProblem = `Error: Videocontainer ist undefiniert`;\r\n               }\r\n             })\r\n             .catch((error) => {\r\n               this.hasCamera = false;\r\n               if ('message' in error) {\r\n                 this.cameraProblem = `Error: ${error.message}`;\r\n               }\r\n             }); \r\n  }\r\n\r\n  public checkinClick() {\r\n    this.isPressed = true;\r\n    if (this.videoStatus) {\r\n      const model: QrCodeModel = { qrCode: this.videoStatus };\r\n      this.modelService\r\n        .checkIn(model).subscribe(\r\n          () => {\r\n            this.isPressed = false;\r\n            this.hasCamera = false;\r\n            this.startedScanning = false;\r\n            this.sessionService.session.isCheckedIn = true;\r\n            this.router.navigate(['check-out']);\r\n          },\r\n          (error) => {\r\n            this.isPressed = false;\r\n            if (error && error instanceof Array) {\r\n              error.forEach(item => {\r\n                const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n                this.messageService.add(message);\r\n              })\r\n            }\r\n          });\r\n    }\r\n  }\r\n\r\n  public logoutClick() {\r\n    this.authService.logoff().subscribe(\r\n      () => {\r\n        this.sessionService.clearSession();\r\n        this.router.navigate(['login']);\r\n      },\r\n      (error) => {\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array) {\r\n          error.forEach(item => {\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public get lotNumber(): string {\r\n    return this.sessionService.session.lotNumber ?? 'Nicht definiert';\r\n  }\r\n\r\n  public get cameraProblemResult(): string|undefined {\r\n    if (!this.startedScanning){\r\n      return undefined;\r\n    }\r\n\r\n    return this.hasCamera ? undefined : this.cameraProblem;\r\n  }\r\n\r\n  public get hasQrCode(): boolean{\r\n    return this.videoStatus !== undefined;\r\n  }\r\n\r\n  public cancelClick(){\r\n    this.startedScanning = false;\r\n    if (this.imageContainer){\r\n      this.imageContainer.style.display = 'block';\r\n    }\r\n    if (this.cameraContainer) {\r\n      this.cameraContainer.style.display = 'none';\r\n    }\r\n  }\r\n\r\n  private tick(): void {\r\n   if (this.video !== null && this.canvasElement !== null && this.canvasContext  !== null) {\r\n     if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\r\n       this.canvasElement.hidden = false;\r\n       this.canvasElement.height = this.video.videoHeight;\r\n       this.canvasElement.width = this.video.videoWidth;\r\n       this.canvasContext.drawImage(this.video, 0, 0, this.canvasElement.width, this.canvasElement.height);\r\n       const imageData: ImageData = this.canvasContext.getImageData(0, 0, this.canvasElement.width, this.canvasElement.height);\r\n       const code: QRCode | null = jsQR(imageData.data, imageData.width, imageData.height);\r\n       if (code !== null) {\r\n         this.drawLine(code.location.topLeftCorner, code.location.topRightCorner, '#FF3B58');\r\n         this.drawLine(code.location.topRightCorner, code.location.bottomRightCorner, '#FF3B58');\r\n         this.drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, '#FF3B58');\r\n         this.drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, '#FF3B58');\r\n         this.videoStatus = code.data;\r\n       }\r\n     }\r\n     requestAnimationFrame(this.tick.bind(this));\r\n   }\r\n  }\r\n\r\n  private drawLine(begin: Point, end: Point, color: string | CanvasGradient | CanvasPattern): void {\r\n   if (this.canvasContext !== null) {\r\n     this.canvasContext.beginPath();\r\n     this.canvasContext.moveTo(begin.x, begin.y);\r\n     this.canvasContext.lineTo(end.x, end.y);\r\n     this.canvasContext.lineWidth = 4;\r\n     this.canvasContext.strokeStyle = color;\r\n     this.canvasContext.stroke();\r\n   }\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div *ngIf=\"isPressed\" class=\"spinner-container\">\r\n    <p-progressSpinner styleClass=\"custom-spinner\"></p-progressSpinner>\r\n  </div>\r\n\r\n  <div class=\"p-d-flex p-flex-column p-ai-center p-field scan-header-container\">\r\n    <div class=\"attension-text\">\r\n      QR-Code scannen\r\n    </div>\r\n    <div class=\"regular-text\">\r\n      ID {{lotNumber}}\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"imageContainer\" class=\"image-container\">\r\n    <img src=\"assets/scan.jpg\" />\r\n    <div *ngIf=\"!!startedScanning\" class=\"regular-text\" style=\"margin-top: 40px\">\r\n      {{cameraProblemResult}}\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"cameraContainer\" class=\"center-container\">\r\n    <canvas style=\"width:230px; height:230px\"></canvas>\r\n  </div>\r\n  <div *ngIf=\"!startedScanning\" class=\"center-container\">\r\n    <button class=\"orange-button\" (click)=\"scanClick()\">Scannen</button>\r\n  </div>\r\n  <div *ngIf=\"startedScanning\" class=\"center-container\" style=\"margin-top:10px\">\r\n    <button class=\"white-button\"(click)=\"cancelClick()\" routerLink=\"/check-in\">Zurück</button>\r\n  </div>\r\n  <div *ngIf=\"!startedScanning\">\r\n    <div class=\"center-container\" style=\"margin-top:10px\">\r\n      <button class=\"white-button\" routerLink=\"/profile\">Einstellungen</button>\r\n    </div>\r\n    <div class=\"center-container\" style=\"margin-top:10px\">\r\n      <button class=\"white-button\" routerLink=\"/vaccine\">Mein Impfpass</button>\r\n    </div>\r\n    <div class=\"center-container\" style=\"font-weight: 700; margin-top:10px\">\r\n      <p-button styleClass=\"p-button-link\" [class.button-disabled]=\"isPressed\"  label=\"Ausloggen\" (click)=\"logoutClick()\"></p-button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { CheckinModel } from '../../model/checkin';\r\nimport { AuthService } from '../../service/auth.service';\r\nimport { GuestService } from '../../service/guest.service';\r\nimport { SessionService } from '../../service/session.service';\r\n\r\n@Component({\r\n  selector: 'app-check-out',\r\n  templateUrl: './check-out.component.html',\r\n  styleUrls: ['./check-out.component.scss']\r\n})\r\nexport class CheckOutComponent implements OnInit{\r\n\r\n  public isPressed = false;\r\n  public model: CheckinModel = {\r\n    name: '',\r\n    address: '',\r\n    city: '',\r\n    zipCode: '',\r\n    timeWork: {\r\n      hours: 0,\r\n      minutes: 0\r\n    },\r\n  };\r\n  constructor(private router: Router, private modelService: GuestService, private sessionService: SessionService, private messageService: MessageService) { }\r\n    ngOnInit(): void {\r\n      this.isPressed = true;\r\n      this.modelService.getLocation().subscribe(\r\n        (model) => { \r\n          this.isPressed = false; \r\n          this.model = model \r\n        },\r\n        (error) => {\r\n          this.isPressed = false;\r\n          if (error && error instanceof Array) {\r\n            error.forEach(item => {\r\n              const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n              this.messageService.add(message);\r\n            })\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n  checkOutClick() {\r\n    this.isPressed = true;\r\n    this.modelService.checkOut().subscribe(\r\n      () => {\r\n        this.isPressed = false;\r\n        this.sessionService.session.isCheckedIn = false;\r\n        this.router.navigate(['check-in']);\r\n      },\r\n      (error)=>{\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array) {\r\n          error.forEach(item => {\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container p-col-12\">\r\n  <div class=\"center-container\">\r\n    <img src=\"assets/checkin.png\" />\r\n  </div>\r\n  <div class=\"p-field center-container attension-text\">\r\n    Eingeloggt\r\n  </div>\r\n  <div class=\"p-d-flex\" style=\"margin-top:65px\">\r\n    <div style=\"width:40px\">\r\n      <img src=\"../../../assets/addr.png\" />\r\n    </div>\r\n    <div style=\"padding-left:20px; font-size:15px; font-weight:500\">\r\n      <b>{{model.name}}</b><br /> {{model.address}} <br /> {{model.zipCode}} {{model.city}}\r\n    </div>\r\n  </div>\r\n  <div class=\"p-d-flex\" style=\"margin-top:35px\">\r\n    <div style=\"width:40px\">\r\n      <img src=\"../../../assets/clock.png\" />\r\n    </div>\r\n    <div style=\"padding-left:20px; font-size:15px\">\r\n      <b>Öffnungszeiten</b><br />{{model.timeWork.hours}} Stunde {{model.timeWork.minutes}} Minuten\r\n    </div>\r\n  </div>\r\n  <div class=\"p-d-flex\" style=\"margin-top:35px\">\r\n    <div style=\"width:40px\">\r\n      <img src=\"../../../assets/calendar.png\" />\r\n    </div>\r\n    <div style=\"padding-left:20px; font-size:15px\">\r\n      <b>Zeitprüfung</b><br />{{model.timeCheck | date:\"dd LLLL hh:mm\"}}\r\n    </div>\r\n  </div>\r\n  <div class=\"p-field center-container\" style=\"margin-top:65px\">\r\n    <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"checkOutClick()\">Auschecken</button>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { PersonModel } from 'src/app/model/profile/person';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { SessionService } from 'src/app/service/session.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-person-new',\r\n  templateUrl: './profile-person-new.component.html',\r\n  styleUrls: ['./profile-person-new.component.scss']\r\n})\r\nexport class ProfilePersonNewComponent {\r\n  @Output() changeStage: EventEmitter<number>;\r\n  public modelForm: FormGroup;\r\n  public model: PersonModel;\r\n  public acceptAgreement = false;\r\n  public acceptSharedData = false;\r\n  public isPressed = false;\r\n  public genders = ['männlich', 'weiblich', 'divers'];\r\n\r\n  constructor(private router: Router,\r\n    private modelService: UserService,\r\n    private authService: AuthService,\r\n    private messageService: MessageService,\r\n    private sessionService: SessionService) {\r\n      this.changeStage = new EventEmitter<number>();\r\n      this.model = this.sessionService.signupPersonModel;\r\n      this.acceptAgreement = this.sessionService.isAgreementChecked;\r\n      this.acceptSharedData = this.sessionService.isDataShareChecked;\r\n      this.modelForm = new FormGroup({\r\n        firstNameControl: new FormControl(this.model.firstName),\r\n        lastNameControl: new FormControl(this.model.lastName),\r\n        genderControl: new FormControl(this.model.gender),\r\n        birthDateControl: new FormControl(this.model.birthDate),\r\n        acceptAgreementControl: new FormControl(this.acceptAgreement),\r\n        acceptDataShareControl: new FormControl(this.acceptSharedData)\r\n      });\r\n  }\r\n\r\n  public nextClick() {\r\n    this.isPressed = true;\r\n    if (this.model.birthDate) {\r\n      const offset = this.model.birthDate.getTimezoneOffset();\r\n      const isoDate = this.model.birthDate.setMinutes(-offset);\r\n      this.model.birthDate = new Date(isoDate);\r\n    }\r\n    this.model.isAcceptAgreement = this.acceptAgreement;\r\n    this.model.isAcceptSharedData = this.acceptSharedData;\r\n    this.modelService.registerProfile(this.model).subscribe(\r\n      (response) => {\r\n        this.isPressed = false;\r\n        this.authService.accessToken = response.token;\r\n        this.sessionService.isAgreementChecked = false;\r\n        this.sessionService.isDataShareChecked = false;\r\n        this.sessionService.isRegistrationStarted = true;\r\n        this.sessionService.signupPersonModel = {};\r\n        this.changeStage.emit(2);\r\n      },\r\n      (error) => {\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array) {\r\n          error.forEach(item => {\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  public cancelClick() {\r\n    this.sessionService.isAgreementChecked = false;\r\n    this.sessionService.isDataShareChecked = false;\r\n    this.sessionService.signupPersonModel = {};\r\n    this.router.navigate(['login']);    \r\n  }\r\n\r\n  public get dateRange(): string {\r\n    const lastYear = new Date().getFullYear();\r\n    const firstYear = lastYear - 100;\r\n\r\n    return `${firstYear}:${lastYear}`;\r\n  }\r\n\r\n  public redirectClick(path:string){\r\n    this.sessionService.isAgreementChecked = this.acceptAgreement;\r\n    this.sessionService.isDataShareChecked = this.acceptSharedData;\r\n    this.router.navigate([path]);\r\n  }\r\n}\r\n","<form [formGroup]=\"modelForm\">\r\n    <div class=\"center-container\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"firstNameInput\" formControlName=\"firstNameControl\" maxlength=\"100\" type=\"text\"\r\n                class=\"small-input-container\" pInputText [(ngModel)]=\"model.firstName\" />\r\n            <label for=\"firstNameInput\">Vorname</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <input id=\"lastNameInput\" formControlName=\"lastNameControl\" maxlength=\"100\" type=\"text\"\r\n                class=\"small-input-container\" pInputText [(ngModel)]=\"model.lastName\" />\r\n            <label for=\"lastNameInput\">Nachname</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <div class=\"label\">Geschlecht</div>\r\n        <select formControlName=\"genderControl\" class=\"small-input-container\" [(ngModel)]=\"model.gender\">\r\n            <option *ngFor=\"let gender of genders\" [ngValue]=\"gender\">{{gender}}</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"center-container standard-indent\">\r\n        <span class=\"p-float-label\">\r\n            <p-calendar id=\"calendar\" formControlName=\"birthDateControl\" dateFormat=\"dd.mm.yy\"\r\n                [(ngModel)]=\"model.birthDate\" [monthNavigator]=\"true\" [yearNavigator]=\"true\"\r\n                [yearRange]=\"dateRange\"></p-calendar>\r\n            <label for=\"calendar\">Geburtsdatum</label>\r\n        </span>\r\n    </div>\r\n    <div class=\"p-field-checkbox center-container\" style=\"margin-top:22px\">\r\n        <p-checkbox id=\"acceptAgreement\" formControlName=\"acceptAgreementControl\" [(ngModel)]=\"acceptAgreement\"\r\n            [binary]=\"true\"></p-checkbox>\r\n        <label for=\"acceptAgreement\">Ich akzeptiere die <a class=\"link link--decorated\"\r\n                (click)=\"redirectClick('agreement')\">Nutzungsbedingungen</a></label>\r\n    </div>\r\n    <div class=\"p-field-checkbox center-container\" style=\"margin-top:0.6rem\">\r\n        <p-checkbox id=\"acceptDataShare\" formControlName=\"acceptDataShareControl\" [(ngModel)]=\"acceptSharedData\"\r\n            [binary]=\"true\"></p-checkbox>\r\n        <label for=\"acceptDataShare\">Ich akzeptiere die <a class=\"link link--decorated\"\r\n                (click)=\"redirectClick('sharedata')\">Datenschutzerklärung</a></label>\r\n    </div>\r\n    <div class=\"center-container\" style=\"margin-top:22px\">\r\n        <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"nextClick()\">Weiter</button>\r\n    </div>\r\n    <div class=\"center-container\" style=\"margin-top:10px\">\r\n        <button class=\"white-button\" [class.button-disabled]=\"isPressed\" (click)=\"cancelClick()\">Abbrechen</button>\r\n    </div>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { PersonModel } from '../model/profile/person';\r\nimport { newProfile, ProfileModel } from '../model/profile/profile';\r\nimport { SessionModel } from '../model/session';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionService {\r\n  private profile: ProfileModel;\r\n  private sessonInfo: SessionModel;\r\n  private vaccineGuid?: string;\r\n  private agreementChecked = false;\r\n  private dataShareChecked = false;\r\n  private registrationStarted = false;\r\n  private newPersonModel: PersonModel;\r\n\r\n  constructor() {\r\n    this.profile = newProfile;\r\n    this.sessonInfo = { isVeryfied: false, isCheckedIn: false };\r\n    this.newPersonModel = {};\r\n  }\r\n\r\n  public get session(): SessionModel {\r\n    return this.sessonInfo;\r\n  }\r\n\r\n  public get activeProfile(): ProfileModel{\r\n    return this.profile;\r\n  }\r\n\r\n  public set activeProfile(profile: ProfileModel) {\r\n    this.profile = profile;\r\n  }\r\n\r\n  public get userVaccineGuid(): string|undefined{\r\n    return this.vaccineGuid;\r\n  }\r\n\r\n  public set userVaccineGuid(guid:string|undefined) {\r\n    this.vaccineGuid = guid;\r\n  }\r\n\r\n  public get isAgreementChecked(): boolean {\r\n    return this.agreementChecked;\r\n  }\r\n\r\n  public set isAgreementChecked(value: boolean){\r\n    this.agreementChecked = value;\r\n  }\r\n\r\n  public get isDataShareChecked(): boolean {\r\n    return this.dataShareChecked;\r\n  }\r\n\r\n  public set isDataShareChecked(value: boolean){\r\n    this.dataShareChecked = value;\r\n  }\r\n\r\n  public get signupPersonModel(): PersonModel {\r\n    return this.newPersonModel;\r\n  }\r\n\r\n  public set signupPersonModel(value: PersonModel){\r\n    this.newPersonModel = value;\r\n  }\r\n\r\n  public clearSession() {\r\n    this.profile = newProfile;\r\n    this.sessonInfo = { isVeryfied: false, isCheckedIn: false };\r\n  }\r\n\r\n  public get isRegistrationStarted(): boolean {\r\n    return this.registrationStarted;\r\n  }\r\n\r\n  public set isRegistrationStarted(value: boolean){\r\n    this.registrationStarted = value;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../service/auth.service';\r\nimport { ForgotPasswordRequest } from '../../model/security/forgot-password-request';\r\nimport { Message, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent {\r\n  public modelForm: FormGroup;\r\n  public model: ForgotPasswordRequest = {}\r\n  public isPressed = false;\r\n\r\n  constructor(private router: Router, private authService: AuthService, private messageService: MessageService) {\r\n    this.modelForm = new FormGroup({\r\n      emailControl: new FormControl('', [Validators.required, Validators.email])\r\n    });\r\n  }\r\n  cancelClick() {\r\n    this.isPressed = false;\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  sendEmailClick() {\r\n    this.authService.forgotPassword(this.model).subscribe(\r\n      () => {\r\n        this.isPressed = false;\r\n        const message: Message = {\r\n          severity: 'info', summary: 'Servicemeldung', detail: 'Überprüfen Sie Ihre E-Mail für weitere Anweisungen'\r\n        };\r\n        this.messageService.add(message);\r\n        this.router.navigate(['login']);\r\n      },\r\n      (error) => {\r\n        this.isPressed = false;\r\n        if (error && error instanceof Array) {\r\n          error.forEach(item => {\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string };\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container\">\r\n  <div class=\"header\">\r\n    <img src=\"assets/images/forgotpassword.jpg\" />\r\n    <div class=\"center-container header-text\">Passwort vergessen?</div>\r\n  </div>\r\n\r\n  <div class=\"p-field center-container regular-text description\">\r\n    Geben Sie Ihre E-Mail-Adresse ein, um neues ein Passwort zu erhalten\r\n  </div>\r\n\r\n  <form class=\"forgot-password-form\" [formGroup]=\"modelForm\">\r\n    <div class=\"input-container large\">\r\n      <div class=\"icon-container user-icon\">\r\n        <input type=\"text\" formControlName=\"emailControl\" class=\"input\" pInputText placeholder=\"E-Mail\"\r\n          [(ngModel)]=\"model.email\" />\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div class=\"p-field center-container\" style=\"margin-bottom: 18px\">\r\n    <button class=\"orange-button\" [class.button-disabled]=\"isPressed\" (click)=\"sendEmailClick()\">\r\n      E-Mail senden\r\n    </button>\r\n  </div>\r\n  <div class=\"p-field center-container\">\r\n    <button class=\"white-button\" [class.button-disabled]=\"isPressed\" (click)=\"cancelClick()\">Abbrechen</button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SessionService } from '../../service/session.service';\r\nimport { ProfileModel } from 'src/app/model/profile/profile';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit{\r\n  public model?: ProfileModel;\r\n  public password ='';\r\n\r\n  constructor(private router: Router, private sessionService: SessionService) {\r\n    \r\n  }\r\n    ngOnInit(): void {\r\n      this.model = this.sessionService.activeProfile;\r\n      this.setPassword();\r\n    }\r\n\r\n  public cancelClick() {\r\n    this.router.navigate(['check-in']);\r\n  }\r\n\r\n  private setPassword(){\r\n    const password = this.model?.contact.password;\r\n    if (password && password !== undefined) {\r\n      for(let i=0; i<password.length; i++) {\r\n        this.password += '*';\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"header\">\r\n    <img src=\"assets/images/settings.png\" />\r\n    <div class=\"center-container header-text\">Profil</div>\r\n  </div>\r\n\r\n  <div class=\"profile-block-container\">\r\n    <button class=\"btn\" routerLink=\"person/edit\"><i class=\"pi pi-pencil\"></i></button>\r\n    <div class=\"p-d-flex\">\r\n      <div class=\"profile-label-text\">Vorname</div>\r\n      <div class=\"profile-value-text\">{{model!.person!.firstName}}</div>\r\n    </div>\r\n    <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Nachname</div>\r\n      <div class=\"profile-value-text\">{{model!.person!.lastName}}</div>\r\n    </div>\r\n    <!-- <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Geschlecht</div>\r\n      <div class=\"profile-value-text\">{{model!.person!.gender}}</div>\r\n    </div>\r\n    <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Geburtsdatum</div>\r\n      <div class=\"profile-value-text\">{{model!.person!.birthDate | date:\"dd.MM.y\"}}</div>\r\n    </div> -->\r\n  </div>\r\n\r\n  <div class=\"profile-block-container\">\r\n    <button class=\"btn\" routerLink=\"address/edit\"><i class=\"pi pi-pencil\"></i></button>\r\n    <div class=\"p-d-flex\">\r\n      <div class=\"profile-label-text\">Straße</div>\r\n      <div class=\"profile-value-text\">{{model!.address?.street}}</div>\r\n    </div>\r\n    <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Hausnummer</div>\r\n      <div class=\"profile-value-text\">{{model!.address?.house}}</div>\r\n    </div>\r\n    <!-- <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Postleitzahl</div>\r\n      <div class=\"profile-value-text\">{{model!.address?.zipCode}}</div>\r\n    </div> -->\r\n    <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Stadt</div>\r\n      <div class=\"profile-value-text\">{{model!.address?.city}}</div>\r\n    </div>\r\n    <!-- <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Bundesland</div>\r\n      <div class=\"profile-value-text\">{{model!.address?.region}}</div>\r\n    </div>\r\n    <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Land</div>\r\n      <div class=\"profile-value-text\">{{model!.address?.country}}</div>\r\n    </div> -->\r\n  </div>\r\n\r\n  <div class=\"profile-block-container\">\r\n    <button class=\"btn\" routerLink=\"contact/edit\"><i class=\"pi pi-pencil\"></i></button>\r\n    <div class=\"p-d-flex\">\r\n      <div class=\"profile-label-text\">Telefonnummer</div>\r\n      <div class=\"profile-value-text\">{{model!.contact?.cellular}}</div>\r\n    </div>\r\n    <div class=\"p-d-flex\" style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">E-Mail</div>\r\n      <div class=\"profile-value-text\">{{model!.contact?.email}}</div>\r\n    </div>\r\n    <!-- <div style=\"margin-top:18px\">\r\n      <div class=\"profile-label-text\">Passwort</div>\r\n      <div class=\"profile-value-text\">{{password}}</div>\r\n    </div> -->\r\n  </div>\r\n\r\n  <div class=\"p-field center-container buttons-container\">\r\n    <button class=\"orange-button\" (click)=\"cancelClick()\">Zurück</button>\r\n  </div>\r\n</div>","import { AfterContentInit, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Message, MessageService } from 'primeng/api';\r\nimport { VaccinneDetailsModel } from 'src/app/model/user/vaccinne-details';\r\nimport { VaccinneListModel } from 'src/app/model/user/vaccinne-list';\r\nimport { UserService } from 'src/app/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-vaccine-list',\r\n  templateUrl: './vaccine-list.component.html',\r\n  styleUrls: ['./vaccine-list.component.scss']\r\n})\r\nexport class VaccineListComponent implements OnInit, AfterContentInit {\r\n  public model: VaccinneListModel;\r\n  public selectedModel: VaccinneDetailsModel\r\n  public isReady = false;\r\n\r\n  constructor(private modelService: UserService, \r\n    private messageService: MessageService,\r\n    private router: Router) { \r\n      this.model = {\r\n        notActive: [],\r\n        active: [],\r\n        testList: []\r\n      }\r\n      this.selectedModel = {\r\n      }\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.modelService.getVaccineListModel().subscribe(\r\n      (response) => { this.model = {...response}},\r\n      (error)=>{\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.isReady = true;\r\n  }\r\n\r\n  public get statusIcon(): string{\r\n    return this.model?.isProtect ? 'assets/check.svg' : 'assets/attention.svg';\r\n  }\r\n  \r\n  public get hasInactiveVaccine(): boolean {\r\n    if (!this.model?.notActive){\r\n      return false;\r\n    }\r\n    return this.model?.notActive?.length > 0;\r\n  }\r\n\r\n  public get hasActiveVaccine(): boolean {\r\n    if (!this.model?.active){\r\n      return false;\r\n    }\r\n    return this.model?.active?.length > 0;\r\n  }\r\n\r\n  public clickVaccine(guid: string|undefined) {\r\n    this.modelService.getVaccineDetailsModel(guid ?? '').subscribe(\r\n      (response) => {\r\n        this.selectedModel = { ...response }\r\n      },\r\n      (error)=>{\r\n        if (error && error instanceof Array)\r\n        {\r\n          error.forEach(item =>{\r\n            const message: Message = { severity: 'error', summary: 'Error', detail: item as string};\r\n            this.messageService.add(message);\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  public okClick(){\r\n    if (this.hasSelectedModel) {\r\n      this.selectedModel = {};\r\n    }\r\n    else {\r\n      this.router.navigate(['/check-in']);\r\n    }\r\n  }\r\n\r\n  public get hasSelectedModel():boolean{\r\n    return this.selectedModel.guid !== undefined;\r\n  }\r\n\r\n  public toggle(id: string){\r\n    const element = document.getElementById(id);\r\n    if (element?.classList.contains('open')){\r\n      element.classList.remove('open')\r\n    } else {\r\n      element?.classList.add('open');\r\n    }\r\n  }\r\n\r\n  public getTestIcon(isActive: boolean|undefined){\r\n    return isActive ? 'assets/check.svg' : 'assets/attention.svg'\r\n  }\r\n}\r\n","<div class=\"p-fluid main-container p-col-12\">\r\n\t<div class=\"header\">\r\n\t\t<img src=\"assets/images/vaccine.svg\" />\r\n\t\t<div class=\"center-container header-text\">Impfpass</div>\r\n\t</div>\r\n\r\n\t<div *ngIf=\"!hasSelectedModel\" class=\"wrapper__container--body\">\r\n\t\t<div class=\"status\">\r\n\t\t\t<div class=\"status__icon\">\r\n\t\t\t\t<img [src]=\"statusIcon\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<span class=\"text\">COVID19</span>\r\n\t\t</div>\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"lists-container\">\r\n\t\t\t\t<div id=\"inactive\" class=\"list open\">\r\n\t\t\t\t\t<div class=\"list__header\" (click)=\"toggle('inactive')\">\r\n\t\t\t\t\t\t<span>Kein ausreichender </span>\r\n\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t<span>Impfschutz</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"list__body\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li *ngFor=\"let item of model.notActive\">\r\n\t\t\t\t\t\t\t\t<div class=\"list-item\" (click)=\"clickVaccine(item.guid)\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"list-item__icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"assets/attention.svg\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"list-item__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"title\">{{item.title}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"item.repeatOn\" class=\"description\">wiederholen auf {{item.repeatOn | date:\r\n\t\t\t\t\t\t\t\t\t\t\t'd.MM.yyyy'}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"arrow-right\"></div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"active\" class=\"list open\">\r\n\t\t\t\t\t<div class=\"list__header\" (click)=\"toggle('active')\">\r\n\t\t\t\t\t\t<span>Aktiver Impfschutz</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"list__body\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li *ngFor=\"let item of model.active\">\r\n\t\t\t\t\t\t\t\t<div class=\"list-item\" (click)=\"clickVaccine(item.guid)\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"list-item__icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"assets/check.svg\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"list-item__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"title\">{{item.title}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"item.recordOn\" class=\"description date\">{{item.recordOn | date: 'd.MM.yyyy'}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"arrow-right\"></div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id=\"test\" class=\"list open\">\r\n\t\t\t\t\t<div class=\"list__header\" (click)=\"toggle('test')\">\r\n\t\t\t\t\t\t<span>Aktiver Tests</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"list__body\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li *ngFor=\"let item of model.testList\">\r\n\t\t\t\t\t\t\t\t<div class=\"list-item\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"list-item__icon\">\r\n\t\t\t\t\t\t\t\t\t\t<img [src]=\"getTestIcon(item.isActive)\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"list-item__body\">\r\n\t\t\t\t\t\t\t\t\t\t<span class=\"title\">{{item.title}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"item.recordOn\" class=\"description date\">{{item.recordOn | date: 'd.MM.yyyy, HH:mm'}}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"item.duration\" class=\"description\">Dauer: {{item.duration}} hours</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div *ngIf=\"hasSelectedModel\" class=\"wrapper__container--body\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"profile\">\r\n\t\t\t\t<div class=\"profile__wrapper\">\r\n\t\t\t\t\t<div class=\"profile-item\">\r\n\t\t\t\t\t\t<div class=\"profile-item__title\">Arztpraxis</div>\r\n\t\t\t\t\t\t<div class=\"profile-item__value\">\r\n\t\t\t\t\t\t\t<strong>{{selectedModel?.doctor?.title}}</strong> <br />\r\n\t\t\t\t\t\t\t{{selectedModel.doctor?.address?.city}}, {{selectedModel.doctor?.address?.street}},\r\n\t\t\t\t\t\t\t{{selectedModel.doctor?.address?.house}}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"profile-item\">\r\n\t\t\t\t\t\t<div class=\"profile-item__title\">Wirkstoff</div>\r\n\t\t\t\t\t\t<div class=\"profile-item__value\">{{selectedModel.title}}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"profile-item\">\r\n\t\t\t\t\t\t<div class=\"profile-item__title\">Datum der Impfung</div>\r\n\t\t\t\t\t\t<div class=\"profile-item__value\">{{selectedModel.recordOn | date: 'd.MM.yyyy'}}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"selectedModel.repeatOn\" class=\"profile-item\">\r\n\t\t\t\t\t\t<div class=\"profile-item__title\">Datum der Auffrishung</div>\r\n\t\t\t\t\t\t<div class=\"profile-item__value\">{{selectedModel.repeatOn | date: 'd.MM.yyyy'}}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"p-field center-container\">\r\n\t\t<button class=\"orange-button\" (click)=\"okClick()\">Zurück</button>\r\n\t</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { AgreementComponent } from './component/agreement/agreement.component';\r\nimport { CheckInComponent } from './component/check-in/check-in.component';\r\nimport { CheckOutComponent } from './component/check-out/check-out.component';\r\nimport { ForgotPasswordComponent } from './component/forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './component/login/login.component';\r\nimport { ProfileComponent } from './component/profile/profile.component';\r\nimport { VerificationComponent } from './component/verification/verification.component';\r\nimport { AuthGuard } from './service/guard/auth.guard';\r\nimport { CheckOutGuard } from './service/guard/checkout.guard';\r\nimport { ProfilePersonEditComponent } from './component/profile-person-edit/profile-person-edit.component';\r\nimport { ProfileAddressEditComponent } from './component/profile-address-edit/profile-address-edit.component';\r\nimport { ProfileContactEditComponent } from './component/profile-contact-edit/profile-contact-edit.component';\r\nimport { ProfilePersonNewComponent } from './component/profile-person-new/profile-person-new.component';\r\nimport { ProfileAddressNewComponent } from './component/profile-address-new/profile-address-new.component';\r\nimport { ProfileContactNewComponent } from './component/profile-contact-new/profile-contact-new.component';\r\nimport { ChangePasswordComponent } from './component/change-password/change-password.component';\r\nimport { VaccineListComponent } from './component/vaccine-list/vaccine-list.component';\r\nimport { ShareDataComponent } from './component/share-data/share-data.component';\r\nimport { ProfileNewComponent } from './component/profile-new/profile-new.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'agreement', component: AgreementComponent},\r\n  { path: 'forgotpassword', component: ForgotPasswordComponent },\r\n  { path: 'changepassword', component: ChangePasswordComponent },\r\n  { path: 'check-in', component: CheckInComponent, canActivate: [AuthGuard]},\r\n  { path: 'check-out', component: CheckOutComponent},\r\n  { path: 'verification', component: VerificationComponent },\r\n  { path: 'profile/new', component: ProfileNewComponent},\r\n  { path: 'profile/person/new', component: ProfilePersonNewComponent },\r\n  { path: 'profile/address/new', component: ProfileAddressNewComponent },\r\n  { path: 'profile/contact/new', component: ProfileContactNewComponent },\r\n  { path: 'profile/person/edit', component: ProfilePersonEditComponent},\r\n  { path: 'profile/address/edit', component: ProfileAddressEditComponent},\r\n  { path: 'profile/contact/edit', component: ProfileContactEditComponent},\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: 'vaccine', component: VaccineListComponent, canActivate: [AuthGuard]},\r\n  { path: 'agreement', component: AgreementComponent},\r\n  { path: 'sharedata', component: ShareDataComponent},\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export const calendar_DE = { closeText: 'Schließen', prevText: 'Zurück', nextText: 'Weiter', monthNames: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'], monthNamesShort: ['Jan', 'Feb', 'MÃ¤r', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'], dayNames: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'], dayNamesShort: ['Son', 'Mon', 'Die', 'Mit', 'Don', 'Fre', 'Sam'], dayNamesMin: ['S', 'M', 'D', 'M ', 'D', 'F ', 'S'], weekHeader: 'Woche', firstDay: 1, isRTL: false, showMonthAfterYear: false, yearSuffix: '', timeOnlyTitle: 'Nur Zeit', timeText: 'Zeit', hourText: 'Stunde', minuteText: 'Minute', secondText: 'Sekunde', currentText: 'Aktuelles Datum', ampm: false, month: 'Monat', week: 'Woche', day: 'Tag', allDayText: 'Ganzer Tag' };\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CheckinModel } from '../model/checkin';\r\nimport { QrCodeModel } from '../model/qrCode';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GuestService extends BaseService {\r\n\r\n  public getLocation(): Observable<CheckinModel> {\r\n    return this.callGet<CheckinModel>('location');\r\n  }\r\n\r\n  public checkIn(model: QrCodeModel) {\r\n    return this.callPost(model, 'checkin');\r\n  }\r\n\r\n  public checkOut() {\r\n    return this.callPost({}, 'checkout');\r\n  }\r\n\r\n  public get localQrCode(): string| null{\r\n    return localStorage.getItem('LUID');\r\n  }\r\n\r\n  public set localQrCode(luid: string| null) {\r\n    if (luid) {\r\n      localStorage.setItem('LUID', luid);\r\n    }\r\n    else {\r\n      localStorage.removeItem('LUID');\r\n    }\r\n  }\r\n\r\n  protected get controller(): string {\r\n    return 'api/guest';\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}